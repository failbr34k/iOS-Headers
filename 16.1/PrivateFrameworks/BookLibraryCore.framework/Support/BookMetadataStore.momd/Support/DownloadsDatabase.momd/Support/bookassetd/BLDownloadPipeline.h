//
//     Generated by class-dump 3.5 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//
//  Build 2022-10-30 xybp888 Dump.
//  

#import <objc/NSObject.h>

@class BLBookInstallManager, BLDatabaseManager, BLDownloadPipelineQueue, BLDownloadPolicyManager, BLProgressSender, NSMapTable, NSMutableDictionary, NSMutableOrderedSet, NSMutableSet, NSString;
@protocol BLOSTransactionCoordinating, BLOperationQueueProtocol, OS_dispatch_queue, OS_dispatch_source;

@interface BLDownloadPipeline : NSObject
{
    BLDatabaseManager *_databaseManager;
    BLBookInstallManager *_installManager;
    BLDownloadPolicyManager *_downloadPolicyManager;
    id <BLOSTransactionCoordinating> _transactionCoordinator;
    NSObject<OS_dispatch_queue> *_dispatchQueue;
    id <BLOperationQueueProtocol> _backgroundOperationQueue;
    NSMutableSet *_dirtyTaskStates;
    NSMutableOrderedSet *_preparationDownloadIDs;
    id <BLOperationQueueProtocol> _preparationOperationQueue;
    id <BLOperationQueueProtocol> _processingOperationQueue;
    NSObject<OS_dispatch_source> *_reconnectTimer;
    NSObject<OS_dispatch_source> *_progressTimer;
    NSMapTable *_taskStates;
    NSMutableSet *_activeTaskStates;
    NSMutableDictionary *_urlSessions;
    id <BLOperationQueueProtocol> _sampleDownloadOperationQueue;
    id <BLOperationQueueProtocol> _discretionaryDownloadOperationQueue;
    id <BLOperationQueueProtocol> _nonDiscretionaryDownloadOperationQueue;
    BLDownloadPipelineQueue *_downloadPipelineQueue;
    BLProgressSender *_progressSender;
}

- (void).cxx_destruct;
@property(readonly, nonatomic) BLProgressSender *progressSender; // @synthesize progressSender=_progressSender;
@property(readonly, nonatomic) BLDownloadPipelineQueue *downloadPipelineQueue; // @synthesize downloadPipelineQueue=_downloadPipelineQueue;
@property(retain, nonatomic) id <BLOperationQueueProtocol> nonDiscretionaryDownloadOperationQueue; // @synthesize nonDiscretionaryDownloadOperationQueue=_nonDiscretionaryDownloadOperationQueue;
@property(retain, nonatomic) id <BLOperationQueueProtocol> discretionaryDownloadOperationQueue; // @synthesize discretionaryDownloadOperationQueue=_discretionaryDownloadOperationQueue;
@property(retain, nonatomic) id <BLOperationQueueProtocol> sampleDownloadOperationQueue; // @synthesize sampleDownloadOperationQueue=_sampleDownloadOperationQueue;
@property(retain, nonatomic) NSMutableDictionary *urlSessions; // @synthesize urlSessions=_urlSessions;
@property(retain, nonatomic) NSMutableSet *activeTaskStates; // @synthesize activeTaskStates=_activeTaskStates;
@property(retain, nonatomic) NSMapTable *taskStates; // @synthesize taskStates=_taskStates;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *progressTimer; // @synthesize progressTimer=_progressTimer;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *reconnectTimer; // @synthesize reconnectTimer=_reconnectTimer;
@property(retain, nonatomic) id <BLOperationQueueProtocol> processingOperationQueue; // @synthesize processingOperationQueue=_processingOperationQueue;
@property(retain, nonatomic) id <BLOperationQueueProtocol> preparationOperationQueue; // @synthesize preparationOperationQueue=_preparationOperationQueue;
@property(retain, nonatomic) NSMutableOrderedSet *preparationDownloadIDs; // @synthesize preparationDownloadIDs=_preparationDownloadIDs;
@property(retain, nonatomic) NSMutableSet *dirtyTaskStates; // @synthesize dirtyTaskStates=_dirtyTaskStates;
@property(retain, nonatomic) id <BLOperationQueueProtocol> backgroundOperationQueue; // @synthesize backgroundOperationQueue=_backgroundOperationQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *dispatchQueue; // @synthesize dispatchQueue=_dispatchQueue;
@property(nonatomic) __weak id <BLOSTransactionCoordinating> transactionCoordinator; // @synthesize transactionCoordinator=_transactionCoordinator;
@property(nonatomic) __weak BLDownloadPolicyManager *downloadPolicyManager; // @synthesize downloadPolicyManager=_downloadPolicyManager;
@property(nonatomic) __weak BLBookInstallManager *installManager; // @synthesize installManager=_installManager;
@property(nonatomic) __weak BLDatabaseManager *databaseManager; // @synthesize databaseManager=_databaseManager;
- (void)dq_setDownloadState:(long long)arg1 forDownloadIdentifier:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)dq_scheduleReconnect;
- (void)notifyServerForFailedDownloadsWithCompletion:(CDUnknownBlockType)arg1;
- (void)dq_notifyServerOfDownloadCancelledWithAccountID:(id)arg1 downloadID:(id)arg2 storeID:(id)arg3 transactionID:(id)arg4 cancelDownloadURL:(id)arg5 completion:(CDUnknownBlockType)arg6;
- (void)dq_notifyServerOfDownloadCancelledWithTaskState:(id)arg1;
- (void)dq_processDownloadFailureWithTaskState:(id)arg1 task:(id)arg2 cancelReason:(long long)arg3;
- (void)dq_processCompletedDownloadWithTaskState:(id)arg1 postProgress:(_Bool)arg2;
- (void)dq_prepareDownloadsForDownloads:(id)arg1 filtersExistingTasks:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)dq_logDownloadEvent:(id)arg1 forTaskWithState:(id)arg2;
- (void)doq_performDownloadOperation:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)dq_pumpDownloadsWithCompletion:(CDUnknownBlockType)arg1;
- (_Bool)dq_setSessionTaskPriorityToHighForDownloadID:(id)arg1;
- (void)dq_clearIsLocalServerCacheForDownloadID:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)dq_saveState:(long long)arg1 forDownloadID:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)dq_cancelProgressTimer;
- (void)dq_removeDownloadFromPipelineQueue:(id)arg1;
- (void)dq_commitProgress;
- (void)dq_startProgressTimer;
- (void)_addDownloads:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)URLSession:(id)arg1 task:(id)arg2 _willSendRequestForEstablishedConnection:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)URLSession:(id)arg1 _willRetryBackgroundDataTask:(id)arg2 withError:(id)arg3;
- (void)URLSession:(id)arg1 task:(id)arg2 didReceiveChallenge:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)URLSession:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3;
- (void)URLSession:(id)arg1 task:(id)arg2 didFinishCollectingMetrics:(id)arg3;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveResponse:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveData:(id)arg3;
- (void)installManager:(id)arg1 didFinishInstallForOperation:(id)arg2;
- (void)installManager:(id)arg1 updatedProgress:(id)arg2 forInstallOperation:(id)arg3;
- (void)installManager:(id)arg1 didStartInstallWithOperation:(id)arg2 forDownloadID:(id)arg3;
- (void)installManager:(id)arg1 willRestartInstallForDownload:(id)arg2;
- (id)dq_getTaskStateFromDownloadID:(id)arg1;
- (void)stopDownloadsWithIdentifiers:(id)arg1 reason:(long long)arg2 completion:(CDUnknownBlockType)arg3;
- (void)retryDownloadWithIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)restartDownloadsWithIdentifiers:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)startupDownloadsWithCompletion:(CDUnknownBlockType)arg1;
- (void)prioritizeDownloadWithIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)reconnectWithURLSessionTasks;
- (void)pumpDownloadsWithCompletion:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (id)initWithDatabaseManager:(id)arg1 downloadPolicyManager:(id)arg2 transactionCoordinator:(id)arg3 installManager:(id)arg4 progressSender:(id)arg5;
- (id)newOperationQueue;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

