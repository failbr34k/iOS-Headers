//
//     Generated by class-dump 3.5 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//
//  Build 2022-10-30 xybp888 Dump.
//  

#import "SFCollaborationItem.h"

@class LPLinkMetadata, NSArray, NSError, NSItemProvider, NSString, NSUUID, SFCollaborationCloudSharingResult, SFCollaborationMetadata, SFCollaborationShareOptions, SFPendingCollaboration;

__attribute__((visibility("hidden")))
@interface _SFSWYCollaborationItem : SFCollaborationItem
{
    SFPendingCollaboration *_pendingCollaboration;
}

- (void).cxx_destruct;
@property(readonly, nonatomic) SFPendingCollaboration *pendingCollaboration; // @synthesize pendingCollaboration=_pendingCollaboration;
- (void)_loadOptionsIfNeeded;
- (id)initWithItemProvider:(id)arg1 activityItem:(id)arg2;

// Remaining properties
@property(readonly, nonatomic) id activityItem;
@property(readonly, copy, nonatomic) NSString *additionalContentIdentifier;
@property(retain, nonatomic) SFCollaborationCloudSharingResult *cloudSharingResult;
@property(readonly, copy, nonatomic) NSString *contentIdentifier;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, nonatomic) _Bool defaultCollaboration;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, copy, nonatomic) NSUUID *identifier;
@property(readonly, nonatomic) _Bool isLoading;
@property(readonly, nonatomic) NSItemProvider *itemProvider;
@property(readonly, nonatomic) LPLinkMetadata *linkMetadata;
@property(readonly, nonatomic) SFCollaborationMetadata *metadata;
@property(readonly, nonatomic) NSError *metadataLoadError;
@property(copy, nonatomic) NSArray *options;
@property(readonly, nonatomic) id placeholderActivityItem;
@property(readonly, copy, nonatomic) NSArray *sendCopyItemPlaceholderValues;
@property(readonly, copy, nonatomic) NSArray *sendCopyItems;
@property(readonly, nonatomic) id sendCopyRepresentation;
@property(copy, nonatomic) SFCollaborationShareOptions *shareOptions;
@property(readonly) Class superclass;
@property(readonly, nonatomic) long long type;

@end

