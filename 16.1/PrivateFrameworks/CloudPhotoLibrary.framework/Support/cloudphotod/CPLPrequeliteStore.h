//
//     Generated by class-dump 3.5 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//
//  Build 2022-10-30 xybp888 Dump.
//  

#import <CloudPhotoLibrary/CPLPlatformObject.h>

@class CPLChangeSessionUpdate, CPLPrequeliteClientCacheMigrator, CPLPrequeliteTable, CPLPrequeliteVariable, CPLSimpleUpgradeHistory, MISSING_TYPE, NSDate, NSMutableDictionary, NSMutableSet, NSObject, NSString, NSURL, PQLConnection;
@protocol OS_dispatch_queue;

@interface CPLPrequeliteStore : CPLPlatformObject
{
    NSObject<OS_dispatch_queue> *_queue;
    NSObject<OS_dispatch_queue> *_writeQueue;
    PQLConnection *_db;
    NSURL *_dbURL;
    _Bool _configuringDB;
    NSMutableSet *_modifiedVariables;
    id _globalVariableCacheIdentifier;
    CPLPrequeliteTable *_globals;
    CPLPrequeliteVariable *_libraryVersionVar;
    CPLPrequeliteVariable *_userIdentifierVar;
    CPLPrequeliteVariable *_lastQuarantineCountReportDateVar;
    CPLPrequeliteVariable *_clientCacheIdentifierVar;
    CPLPrequeliteVariable *_clientCacheIdentifierAsKnownByClient;
    CPLPrequeliteVariable *_libraryCreationDateVar;
    CPLPrequeliteVariable *_changeSessionUpdateVar;
    _Bool _hasCachedChangeSessionUpdate;
    CPLChangeSessionUpdate *_cachedChangeSessionUpdate;
    CPLPrequeliteVariable *_libraryOptionsVar;
    CPLPrequeliteVariable *_shouldUpdateDisabledFeaturesVar;
    CPLPrequeliteVariable *_disabledFeaturesDataVar;
    CPLSimpleUpgradeHistory *_history;
    CPLPrequeliteVariable *_derivativesFilterVar;
    CPLPrequeliteVariable *_deactivatedVar;
    CPLPrequeliteVariable *_universeNameVar;
    Class _userIdentifierClass;
    NSObject<OS_dispatch_queue> *_isClientInSyncWithClientCacheQueue;
    _Bool _isClientInSyncWithClientCache;
    unsigned long long _resetOption;
    NSString *_resetReason;
    NSString *_wipeReason;
    _Bool _failInsteadOfWipe;
    _Bool _needsToReset;
    _Bool _reentrencyGuard;
    _Bool _didWipeLibrary;
    int _upgradeEventJournal;
    _Bool _mustFix22666940;
    _Bool _mustMigratePushQueue;
    CPLPrequeliteClientCacheMigrator *_clientCacheMigrator;
    _Bool _hasScheduledClientCacheDrop;
    NSObject<OS_dispatch_queue> *_vacuumQueue;
    _Bool _executingVacuum;
    _Bool _shouldProfile;
    _Bool _showStatsForAllTransactions;
    double _lastLongTransactionDate;
    NSMutableDictionary *_transactionStatistics;
    NSDate *_libraryCreationDate;
}

+ (void)setShouldWarnUserBeforeWipeOnUpgrade:(_Bool)arg1;
+ (_Bool)shouldWarnUserBeforeWipeOnUpgrade;
+ (void)setShouldPreventWipeOnUpgrade:(_Bool)arg1;
+ (_Bool)shouldPreventWipeOnUpgrade;
- (void).cxx_destruct;
@property(readonly) NSDate *libraryCreationDate; // @synthesize libraryCreationDate=_libraryCreationDate;
- (id)redactedDescription;
@property(readonly, copy) NSString *description;
- (_Bool)deleteDynamicallyCreatedStorages:(id)arg1 error:(id *)arg2;
- (_Bool)createStoragesDynamically:(id)arg1 error:(id *)arg2;
- (void)markAsCorrupted;
- (void)emergencyClose;
- (void)stopVacuum;
- (void)startVacuum;
- (void)_vacuum:(long long)arg1 withInitialDatabaseSize:(long long)arg2;
- (long long)_sizeInBytes;
- (id)transientPullRepository;
- (id)cloudCache;
- (id)clientCache;
- (_Bool)hasTable:(id)arg1;
- (_Bool)table:(id)arg1 hasColumnWithName:(id)arg2;
- (void)table:(id)arg1 enumerateCountGroupedByProperty:(id)arg2 block:(CDUnknownBlockType)arg3;
- (void)table:(id)arg1 enumerateCountGroupedByUnsignedIntegerProperty:(id)arg2 block:(CDUnknownBlockType)arg3;
- (unsigned long long)table:(id)arg1 countOfRecordsMatchingQuery:(id)arg2;
- (unsigned long long)tableCountOfRecords:(id)arg1;
- (_Bool)table:(id)arg1 hasRecordsMatchingQuery:(id)arg2;
- (_Bool)tableHasRecords:(id)arg1;
- (void)recordUpgradeEvent:(id)arg1 arguments:(struct __va_list_tag [1])arg2;
- (void)recordUpgradeEvent:(id)arg1;
- (id)status;
- (void)transactionDidFinish;
- (void)writeTransactionDidFail;
- (void)writeTransactionDidSucceed;
- (void)wipeStoreAtNextOpeningWithReason:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)_deleteWipeReason;
- (id)wipeReason;
- (id)_wipeStoreMarkerURL;
- (_Bool)storeDerivativesFilter:(id)arg1 error:(id *)arg2;
- (id)derivativesFilter;
- (id)disabledFeatures;
- (_Bool)storeDisabledFeatures:(id)arg1 error:(id *)arg2;
- (_Bool)setShouldUpdateDisabledFeaturesWithError:(id *)arg1;
@property(readonly, nonatomic) _Bool shouldUpdateDisabledFeatures;
- (_Bool)storeChangeSessionUpdate:(id)arg1 error:(id *)arg2;
@property(readonly, nonatomic) CPLChangeSessionUpdate *storedChangeSessionUpdate;
@property(readonly, nonatomic) _Bool hasStoredChangeSessionUpdate;
- (_Bool)isClientInSyncWithClientCache;
- (_Bool)storeClientIsNotInSyncWithClientCacheWithError:(id *)arg1;
- (_Bool)storeClientIsInSyncWithClientCacheWithError:(id *)arg1;
- (id)createNewClientCacheIdentifier;
- (_Bool)storeClientCacheIdentifier:(id)arg1 error:(id *)arg2;
- (id)clientCacheIdentifier;
- (MISSING_TYPE *)storeLastQuarantineCountReportDate:error: /* Error: Ran out of types for this method. */;
- (id)lastQuarantineCountReportDate;
- (_Bool)storeUserIdentifier:(id)arg1 error:(id *)arg2;
- (id)userIdentifier;
- (Class)_userIdentifierClass;
- (_Bool)resetValueForGlobalVariable:(id)arg1 error:(id *)arg2;
- (id)valueForGlobalVariable:(id)arg1;
- (_Bool)setValue:(id)arg1 forGlobalVariable:(id)arg2 error:(id *)arg3;
- (_Bool)addGlobalVariable:(id)arg1 defaultValue:(id)arg2 error:(id *)arg3;
- (void)_cacheValue:(id)arg1 forVariable:(id)arg2;
- (id)pqlConnection;
- (id)createNewLibraryVersion;
- (_Bool)storeLibraryVersion:(id)arg1 withError:(id *)arg2;
- (id)libraryVersion;
- (_Bool)updateLibraryOptions:(unsigned long long)arg1 error:(id *)arg2;
- (unsigned long long)libraryOptions;
- (void)performBarrier;
- (void)performBarrierTransaction:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (_Bool)closeWithError:(id *)arg1;
- (void)blockWriteTransactionsWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)performWriteTransaction:(id)arg1 withBlock:(CDUnknownBlockType)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)performReadTransaction:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (_Bool)executePostOpenWithError:(id *)arg1;
- (_Bool)openWithError:(id *)arg1;
- (_Bool)_openWithError:(id *)arg1;
- (void)_markLibraryAsCorruptedWithInfo:(id)arg1;
- (_Bool)_setupPragmasAndFunctions;
- (_Bool)markDatabaseAsDeactivatedWithError:(id *)arg1;
- (void)_deleteCorruptionInfo;
@property(readonly, nonatomic) id corruptionInfo;
- (id)_corruptionMarkerURL;
- (_Bool)_setupDBIfNeeded;
- (_Bool)_upgradeDB:(long long)arg1;
- (_Bool)_wipeIfDeactivated:(long long)arg1 didWipeDatabase:(_Bool *)arg2 error:(id *)arg3;
- (void)_wipeBeforeOpeningIfNecessary;
- (id)_wipeReasonFromCorruptionInfo:(id)arg1;
- (_Bool)_closeWipeAndReOpenWithReason:(id)arg1 warnUserIfPossible:(_Bool)arg2 createRadar:(_Bool)arg3 error:(id *)arg4;
- (void)_wipeWithReason:(id)arg1;
- (_Bool)_fixStoreAfterAnyVersionChange;
- (_Bool)_postUpgradeToVersion:(long long)arg1;
- (_Bool)_upgradeToVersion:(long long)arg1;
- (void)_scheduleClientCacheDropIfNecessary;
- (void)_scheduleClientCacheDrop;
- (_Bool)_fix22666940;
- (_Bool)_performWithFlags:(unsigned int)arg1 action:(CDUnknownBlockType)arg2;
- (void)_unsetupProfilingHooks;
- (void)_setupProfilingHooks;
- (id)_transactionStatsDescription;
- (_Bool)_initializeDB;
- (void)triggerResetAfterUpgrade:(unsigned long long)arg1 withReason:(id)arg2;
- (id)initWithAbstractObject:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

