//
//     Generated by class-dump 3.5 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//
//  Build 2022-10-30 xybp888 Dump.
//  

@class CPLPrequeliteSynthesizedVariable, CPLPrequeliteTodoVar, CPLPrequeliteVariable, CPLPrequeliteVariableGroup, MISSING_TYPE, NSMutableSet, NSString, _CPLPrequeliteScopeBase, _CPLPrequeliteScopeSyncState;
@protocol PQLInjecting;

@interface CPLPrequeliteScopeStorage
{
    CPLPrequeliteVariable *_nextIndexVar;
    CPLPrequeliteVariable *_scopeListSyncAnchorVar;
    NSMutableSet *_modifiedVariables;
    _CPLPrequeliteScopeBase *_base;
    CPLPrequeliteVariable *_flagsVar;
    CPLPrequeliteVariable *_disabledDateVar;
    CPLPrequeliteVariable *_deleteDateVar;
    CPLPrequeliteVariable *_libraryInfoVar;
    CPLPrequeliteVariable *_scopeChangeVar;
    CPLPrequeliteVariable *_lastLibraryInfoUpdateVar;
    CPLPrequeliteVariable *_transportScopeVar;
    _CPLPrequeliteScopeSyncState *_syncState;
    CPLPrequeliteVariable *_estimatedSizeVar;
    CPLPrequeliteVariable *_estimatedAssetCountVar;
    CPLPrequeliteVariable *_initialSyncDateVar;
    CPLPrequeliteVariable *_supervisorInfoVar;
    CPLPrequeliteTodoVar *_pushToTransportTodoVar;
    CPLPrequeliteTodoVar *_pullFromTransportTodoVar;
    CPLPrequeliteTodoVar *_clientNeedsToPullTodoVar;
    CPLPrequeliteTodoVar *_updateTransportTodoVar;
    CPLPrequeliteVariable *_stagedScopeIdentifierVar;
    CPLPrequeliteVariableGroup *_all;
    CPLPrequeliteVariableGroup *_libraryStateGroup;
    id <PQLInjecting> _injectionForScopesAllowingPullFromTransport;
    Class _transportGroupClass;
    _Bool _noteEndOfResetIfNecessary;
    CPLPrequeliteSynthesizedVariable *_hasStagedSyncAnchorsVar;
}

+ (id)_supportedScopeTypesWithOptions:(unsigned long long)arg1;
+ (_Bool)_scopeType:(long long)arg1 supportsClientSyncWithOptions:(unsigned long long)arg2;
- (void).cxx_destruct;
- (void)writeTransactionDidFail;
- (void)writeTransactionDidSucceed;
- (_Bool)bumpPullFromTransportExpirationIntervalWithError:(id *)arg1;
- (id)filterForExcludedScopeIdentifiers:(id)arg1;
- (id)filterForIncludedScopeIdentifiers:(id)arg1;
- (id)_injectionForFilter:(id)arg1;
- (void)_getLocalIndexes:(id *)arg1 cloudIndexes:(id *)arg2 forScopeIdentifiers:(id)arg3;
- (void)_noteEndOfResetIfNecessary;
- (unsigned long long)estimatedAssetCountForScope:(id)arg1;
- (unsigned long long)estimatedSizeForScope:(id)arg1;
- (_Bool)storeEstimatedSize:(unsigned long long)arg1 estimatedAssetCount:(unsigned long long)arg2 forScope:(id)arg3 error:(id *)arg4;
- (_Bool)storeSupportedFeatureVersionInLastSync:(unsigned long long)arg1 forScope:(id)arg2 error:(id *)arg3;
- (unsigned long long)supportedFeatureVersionInLastSyncForScope:(id)arg1;
- (id)lastDateOfCompletedPullFromTransportForScope:(id)arg1;
- (_Bool)storeLastDateOfClearedPushRepository:(id)arg1 forScope:(id)arg2 error:(id *)arg3;
- (MISSING_TYPE *)lastDateOfClearedPushRepositoryForScope: /* Error: Ran out of types for this method. */;
- (_Bool)allActiveScopesHasFinishedSyncs;
- (_Bool)hasFinishedAFullSyncForScope:(id)arg1;
- (id)initialSyncDateForScope:(id)arg1;
- (id)initialSyncAnchorForScope:(id)arg1;
- (_Bool)setInitialSyncAnchor:(id)arg1 forScope:(id)arg2 error:(id *)arg3;
- (_Bool)setHasFetchedInitialSyncAnchor:(_Bool)arg1 forScope:(id)arg2 error:(id *)arg3;
- (_Bool)hasScopeFetchedInitialSyncAnchor:(id)arg1;
- (_Bool)setClassNameOfRecordsForInitialQuery:(id)arg1 forScope:(id)arg2 error:(id *)arg3;
- (id)classNameOfRecordsForInitialQueryForScope:(id)arg1;
- (_Bool)storeTransientSyncAnchor:(id)arg1 forScope:(id)arg2 error:(id *)arg3;
- (id)transientSyncAnchorForScope:(id)arg1;
- (_Bool)discardStagedSyncAnchorWithScopeFilter:(id)arg1 error:(id *)arg2;
- (_Bool)discardStagedSyncAnchorForScope:(id)arg1 error:(id *)arg2;
@property(readonly, nonatomic) _Bool hasStagedSyncAnchors;
- (_Bool)hasStagedSyncAnchorForScope:(id)arg1;
- (_Bool)commitSyncAnchorForScope:(id)arg1 error:(id *)arg2;
- (void)_markFirstSyncOfPrimaryAsSuccessfulWithScope:(id)arg1;
- (_Bool)resetSyncAnchorForScope:(id)arg1 error:(id *)arg2;
- (_Bool)setSyncAnchor:(id)arg1 forScope:(id)arg2 error:(id *)arg3;
- (id)syncAnchorForScope:(id)arg1 isCommitted:(_Bool *)arg2;
- (_Bool)setDidDropSomeRecordsForScope:(id)arg1 error:(id *)arg2;
- (_Bool)didDropSomeRecordsForScope:(id)arg1;
- (_Bool)storeDownloadTransportGroup:(id)arg1 forScope:(id)arg2 error:(id *)arg3;
- (id)downloadTransportGroupForScope:(id)arg1;
- (_Bool)storeUploadTransportGroup:(id)arg1 forScope:(id)arg2 error:(id *)arg3;
- (id)uploadTransportGroupForScope:(id)arg1;
- (_Bool)resetSyncStateForScope:(id)arg1 error:(id *)arg2;
- (void)_discardCachedValuesForGroup:(id)arg1;
- (_Bool)_storeTransportGroup:(id)arg1 inColumnVariable:(id)arg2 forScope:(id)arg3 error:(id *)arg4;
- (id)_transportGroupForColumnVariable:(id)arg1 forScope:(id)arg2;
- (Class)_transportGroupClass;
- (id)lastScopeChangeUpdateDateForScope:(id)arg1;
- (_Bool)storeScopeChange:(id)arg1 forScope:(id)arg2 scopeChangeHasBeenUpdated:(_Bool *)arg3 error:(id *)arg4;
- (_Bool)_storeLibraryInfo:(id)arg1 forScope:(id)arg2 libraryInfoHasBeenUpdated:(_Bool *)arg3 error:(id *)arg4;
- (id)scopeChangeForScope:(id)arg1;
- (id)_libraryInfoForScope:(id)arg1;
- (_Bool)setTransportScope:(id)arg1 forScope:(id)arg2 error:(id *)arg3;
- (id)transportScopeForScope:(id)arg1;
- (_Bool)setScopeNeedsUpdateFromTransport:(id)arg1 error:(id *)arg2;
- (id)_librarySateForScope:(id)arg1;
- (_Bool)setDeleteDate:(id)arg1 forScope:(id)arg2 error:(id *)arg3;
- (id)deleteDateForScope:(id)arg1;
- (_Bool)setDisabledDate:(id)arg1 forScope:(id)arg2 error:(id *)arg3;
- (id)disabledDateForScope:(id)arg1;
- (_Bool)updateFlags:(id)arg1 forScope:(id)arg2 error:(id *)arg3;
- (id)flagsForScope:(id)arg1;
- (id)_valueForColumnVariable:(id)arg1 scope:(id)arg2;
- (_Bool)_storeValue:(id)arg1 forColumnVariable:(id)arg2 scope:(id)arg3 error:(id *)arg4;
- (void)_cacheValue:(id)arg1 forColumnVariable:(id)arg2 scope:(id)arg3;
- (_Bool)storeScopeListSyncAnchor:(id)arg1 error:(id *)arg2;
- (id)scopeListSyncAnchor;
- (id)supervisorInfoForScope:(id)arg1;
- (_Bool)storeSupervisorInfo:(id)arg1 forScope:(id)arg2 error:(id *)arg3;
- (long long)busyStateForScope:(id)arg1;
- (_Bool)storeBusyState:(long long)arg1 forScope:(id)arg2 error:(id *)arg3;
- (_Bool)storeRewindSyncAnchors:(id)arg1 forScope:(id)arg2 error:(id *)arg3;
- (id)rewindSyncAnchorsForScope:(id)arg1;
- (id)stagingScopeForScope:(id)arg1;
- (id)primaryScope;
- (id)validCloudIndexes;
- (id)validLocalIndexes;
- (id)scopeWithStableIndex:(long long)arg1;
- (id)scopeWithCloudIndex:(long long)arg1;
- (id)scopeWithLocalIndex:(long long)arg1;
- (id)scopeWithIdentifier:(id)arg1;
- (id)_scopeWithQuery:(id)arg1;
- (_Bool)bumpStableIndexForScopeWithIdentifier:(id)arg1 error:(id *)arg2;
- (_Bool)bumpCloudIndexForScopeWithIdentifier:(id)arg1 error:(id *)arg2;
- (_Bool)bumpLocalIndexForScopeWithIdentifier:(id)arg1 error:(id *)arg2;
- (long long)_bumpIndexWithError:(id *)arg1;
- (_Bool)setScopeType:(long long)arg1 forScope:(id)arg2 error:(id *)arg3;
- (_Bool)deleteScopeWithIdentifier:(id)arg1 error:(id *)arg2;
- (id)addScopeWithIdentifier:(id)arg1 scopeType:(long long)arg2 error:(id *)arg3;
- (_Bool)doesScopeNeedToUpdateTransport:(id)arg1;
- (_Bool)setScope:(id)arg1 hasCompletedTransportUpdate:(long long)arg2 error:(id *)arg3;
- (long long)transportUpdateTaskForScope:(id)arg1;
- (_Bool)setScopeNeedsToUpdateTransport:(id)arg1 error:(id *)arg2;
- (_Bool)hasScopesNeedingToUpdateTransport;
- (id)enumeratorForScopesNeedingToUpdateTransport;
- (_Bool)doesScopeSupportToBePulledByClient:(id)arg1;
- (_Bool)doesScopeNeedToBePulledByClient:(id)arg1;
- (_Bool)setScopeNeedsToBePulledByClient:(id)arg1 error:(id *)arg2;
- (_Bool)setScope:(id)arg1 hasCompletedClientNeedsToPullTask:(long long)arg2 error:(id *)arg3;
- (long long)clientNeedsToPullTaskForScope:(id)arg1;
- (id)enumeratorForScopesNeedingToBePulledByClientWithMaximumCount:(unsigned long long)arg1;
- (_Bool)doScopesNeedMetadataSync:(id)arg1;
- (id)enumeratorForScopesWithMingling;
- (_Bool)setPullFromTransportExpirationInterval:(double)arg1 scope:(id)arg2 error:(id *)arg3;
- (_Bool)doesScopeNeedToPullChangesFromTransport:(id)arg1;
- (_Bool)setScope:(id)arg1 hasCompletedPullFromTransportTask:(long long)arg2 error:(id *)arg3;
- (long long)pullFromTransportTaskForScope:(id)arg1;
- (_Bool)setAllScopesHasChangesToPullFromTransportWithError:(id *)arg1;
- (_Bool)setScopeHasChangesToPullFromTransport:(id)arg1 error:(id *)arg2;
- (_Bool)hasScopesNeedingToPullChangesFromTransport;
- (id)enumeratorForScopesNeedingToPullChangesFromTransport;
- (id)_injectionForScopesAllowingPullFromTransport;
- (_Bool)doesScopeNeedToPushChangesToTransport:(id)arg1;
- (_Bool)setScope:(id)arg1 hasCompletedPushToTransportTask:(long long)arg2 error:(id *)arg3;
- (long long)pushToTransportTaskForScope:(id)arg1;
- (_Bool)setScopeHasChangesToPushToTransport:(id)arg1 error:(id *)arg2;
- (_Bool)hasScopesNeedingToPushChangesToTransport;
- (id)enumeratorForScopesNeedingToPushChangesToTransport;
- (_Bool)hasScopesNeedingToPushHighPriorityChangesToTransport;
- (id)enumeratorForScopesNeedingToPushHighPriorityChangesToTransport;
- (_Bool)forcePushToTransportForActiveScopesWithError:(id *)arg1;
- (_Bool)forceIdentifyUknownScopesWithError:(id *)arg1;
- (id)enumeratorForDeletedStagedScopes;
- (id)enumeratorForScopesNeedingUpdateFromTransport;
- (id)enumeratorForScopesIncludeInactive:(_Bool)arg1;
- (_Bool)_setScope:(id)arg1 hasCompletedTaskItem:(long long)arg2 task:(id)arg3 error:(id *)arg4;
- (id)_taskItemCompletionDateForScope:(id)arg1 task:(id)arg2;
- (long long)_taskItemForScope:(id)arg1 task:(id)arg2;
- (_Bool)_setScope:(id)arg1 hasTaskTodo:(id)arg2 error:(id *)arg3;
- (_Bool)fixStorageAfterAnyVersionChange;
- (void)_updateStatusForMainScopeChange:(id)arg1;
- (id)statusDictionary;
- (id)recordsDesignation;
- (void)_fillScopeTypeOrder:(long long [7])arg1 withOrderOfScopeTypes:(id)arg2 name:(id)arg3;
- (_Bool)openWithError:(id *)arg1;
- (_Bool)upgradeScopesWithNewLibraryOptions:(unsigned long long)arg1 error:(id *)arg2;
- (_Bool)upgradeStorageToVersion:(long long)arg1;
- (_Bool)_transferValueFromVariable:(id)arg1 type:(id)arg2 ofStorage:(id)arg3 toColumnVariable:(id)arg4 transformer:(CDUnknownBlockType)arg5;
- (_Bool)initializeStorage;
- (_Bool)_createInitialPrimarySyncScope;
- (_Bool)_addScope:(id)arg1 error:(id *)arg2;
- (double)_minimalPullFromTranportExpirationInterval;
- (_Bool)_scopeTypeSupportsClientSync:(long long)arg1;
- (id)initWithAbstractObject:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) _Bool isAlive;
@property(readonly, nonatomic) _Bool isEmpty;
@property(readonly, nonatomic) _Bool shouldIncludeInStatus;
@property(readonly) Class superclass;

@end

