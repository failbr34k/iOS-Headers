//
//     Generated by class-dump 3.5 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//
//  Build 2022-10-30 xybp888 Dump.
//  

#import <objc/NSObject.h>

@class CKRecord, CKRecordID, CPLCKBatchUploadPlanner, NSString;

@interface CPLCKSplitCopyHelper : NSObject
{
    _Bool _fromPrivateRecord;
    CKRecord *_baseCKRecord;
    CKRecordID *_sourceRecordID;
    Class _recordClass;
    long long _sourceDatabaseScope;
    CKRecordID *_destinationRecordID;
    NSString *_action;
    CPLCKBatchUploadPlanner *_planner;
}

- (void).cxx_destruct;
@property(readonly, nonatomic) CPLCKBatchUploadPlanner *planner; // @synthesize planner=_planner;
@property(readonly, nonatomic) NSString *action; // @synthesize action=_action;
@property(readonly, nonatomic) CKRecordID *destinationRecordID; // @synthesize destinationRecordID=_destinationRecordID;
@property(readonly, nonatomic) long long sourceDatabaseScope; // @synthesize sourceDatabaseScope=_sourceDatabaseScope;
@property(readonly, nonatomic) Class recordClass; // @synthesize recordClass=_recordClass;
@property(readonly, nonatomic) _Bool fromPrivateRecord; // @synthesize fromPrivateRecord=_fromPrivateRecord;
@property(readonly, nonatomic) CKRecordID *sourceRecordID; // @synthesize sourceRecordID=_sourceRecordID;
@property(readonly, nonatomic) CKRecord *baseCKRecord; // @synthesize baseCKRecord=_baseCKRecord;
- (id)rejectedScopedIdentifierForRejectedCKRecordID:(id)arg1;
- (id)scopedIdentifierForCKRecordID:(id)arg1;
- (id)scopeIdentifierFromZoneID:(id)arg1;
- (id)zoneIDFromScopeIdentifier:(id)arg1;
- (id)cloudKitScopeForScopeIdentifier:(id)arg1;
- (id)finalizedDestinationCKRecordFromProposedCKRecord:(id)arg1 error:(id *)arg2;
- (id)recordNameInDestinationCKRecordFromRecordName:(id)arg1 error:(id *)arg2;
- (_Bool)shouldCopyCKRecordKeyToDestinationCKRecord:(id)arg1;
- (id)baseDestinationCKRecordForSourceCKRecord:(id)arg1 destinationCKRecordID:(id)arg2 error:(id *)arg3;
- (void)prepareCopyForCKRecordID:(id)arg1 fromCKRecord:(id)arg2;
- (_Bool)shouldCopyForCKRecordID:(id)arg1 fromCKRecord:(id)arg2;
- (id)copiedRecordFromSourceRecord:(id)arg1 action:(id)arg2 error:(id *)arg3;
- (id)initWithBaseCKRecord:(id)arg1 sourceRecordID:(id)arg2 fromPrivateRecord:(_Bool)arg3 recordClass:(Class)arg4 sourceDatabaseScope:(long long)arg5 destinationRecordID:(id)arg6 planner:(id)arg7;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

