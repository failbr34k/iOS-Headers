//
//     Generated by class-dump 3.5 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//
//  Build 2022-10-30 xybp888 Dump.
//  

#import <objc/NSObject.h>

@class CKRecord, CKRecordID, CPLCKSharePlan, CPLCKUnsharePlan, CPLCloudKitUploadMetric, CPLCloudKitUploadOperationContext, CPLCloudKitZoneIdentification, CPLRecordChange, CPLRecordTarget, CPLRecordTargetMapping, CPLSimpleCKRecordBuilder, NSArray, NSDate, NSMutableArray, NSMutableDictionary, NSMutableSet, NSString;
@protocol CPLCKRecordPropertyMapping, CPLCloudKitScopeProvider;

@interface CPLCKBatchUploadPlanner : NSObject
{
    NSMutableDictionary *_ckRecordIDToScopedIdentifier;
    NSMutableDictionary *_ckRecordIDToRejectedScopedIdentifier;
    NSMutableArray *_ckRecordsToUpload;
    NSMutableArray *_ckRecordIDsToDelete;
    NSMutableSet *_scopedIdentifiersMovingToSplitState;
    NSMutableArray *_sharedCKRecordsToUpload;
    NSMutableArray *_sharedCKRecordIDsToDelete;
    NSMutableSet *_dontUnshareScopedIdentifier;
    NSMutableDictionary *_requestedSharedCKRecordIDs;
    NSMutableDictionary *_requestedPrivateCKRecordIDs;
    NSMutableSet *_mastersUploadedToPrivateZone;
    NSMutableDictionary *_mastersNotYetUploadedToPrivateZone;
    NSMutableSet *_mastersUploadedToSharedZone;
    NSMutableDictionary *_mastersNotYetUploadedToSharedZone;
    NSMutableSet *_indirectRecordsUploadedToPrivateZone;
    CPLRecordChange *_currentRecordChange;
    CPLRecordTarget *_currentRecordTarget;
    CKRecordID *_currentRecordID;
    CPLSimpleCKRecordBuilder *_simpleBuilder;
    CKRecord *_pendingCKRecordToUpload;
    CKRecord *_ckRecordToUpload;
    CKRecordID *_sharedRecordID;
    CKRecord *_sharedCKRecordToUpload;
    NSDate *_recordModificationDate;
    _Bool _checkLocationData;
    unsigned long long _photosWithLocationDataCount;
    unsigned long long _sharedPhotosWithLocationDataCount;
    NSMutableSet *_scopedIdentifiersNeedingToCallProgressHandler;
    CPLCloudKitUploadOperationContext *_uploadContext;
    CPLCloudKitUploadOperationContext *_sharedUploadContext;
    double _uploadTotalSize;
    NSMutableDictionary *_sizesPerRecordID;
    NSMutableDictionary *_progressSizesPerRecordID;
    NSDate *_dateOfFirstUploadProgress;
    id <CPLCloudKitScopeProvider> _scopeProvider;
    CPLCloudKitZoneIdentification *_destinationZoneIdentification;
    CPLCloudKitZoneIdentification *_sharedZoneIdentification;
    id <CPLCKRecordPropertyMapping> _propertyMapping;
    CKRecordID *_currentUserRecordID;
    CPLRecordTargetMapping *_targetMapping;
    NSDate *_cplEnabledDate;
    CPLCloudKitUploadMetric *_metric;
    CDUnknownBlockType _progressHandler;
    double _totalDurationOfUpload;
    CPLCKSharePlan *_sharePlan;
    CPLCKUnsharePlan *_unsharePlan;
}

- (void).cxx_destruct;
@property(readonly, nonatomic) CPLCKUnsharePlan *unsharePlan; // @synthesize unsharePlan=_unsharePlan;
@property(readonly, nonatomic) CPLCKSharePlan *sharePlan; // @synthesize sharePlan=_sharePlan;
@property(readonly, nonatomic) double totalDurationOfUpload; // @synthesize totalDurationOfUpload=_totalDurationOfUpload;
@property(readonly, nonatomic) NSArray *sharedCKRecordIDsToDelete; // @synthesize sharedCKRecordIDsToDelete=_sharedCKRecordIDsToDelete;
@property(readonly, nonatomic) NSArray *sharedCKRecordsToUpload; // @synthesize sharedCKRecordsToUpload=_sharedCKRecordsToUpload;
@property(readonly, nonatomic) NSArray *ckRecordIDsToDelete; // @synthesize ckRecordIDsToDelete=_ckRecordIDsToDelete;
@property(readonly, nonatomic) NSArray *ckRecordsToUpload; // @synthesize ckRecordsToUpload=_ckRecordsToUpload;
@property(copy, nonatomic) CDUnknownBlockType progressHandler; // @synthesize progressHandler=_progressHandler;
@property(retain, nonatomic) CPLCloudKitUploadMetric *metric; // @synthesize metric=_metric;
@property(copy, nonatomic) NSDate *cplEnabledDate; // @synthesize cplEnabledDate=_cplEnabledDate;
@property(readonly, nonatomic) CPLRecordTargetMapping *targetMapping; // @synthesize targetMapping=_targetMapping;
@property(readonly, nonatomic) CKRecordID *currentUserRecordID; // @synthesize currentUserRecordID=_currentUserRecordID;
@property(readonly, nonatomic) id <CPLCKRecordPropertyMapping> propertyMapping; // @synthesize propertyMapping=_propertyMapping;
@property(readonly, nonatomic) CPLCloudKitZoneIdentification *sharedZoneIdentification; // @synthesize sharedZoneIdentification=_sharedZoneIdentification;
@property(readonly, nonatomic) CPLCloudKitZoneIdentification *destinationZoneIdentification; // @synthesize destinationZoneIdentification=_destinationZoneIdentification;
@property(readonly, nonatomic) id <CPLCloudKitScopeProvider> scopeProvider; // @synthesize scopeProvider=_scopeProvider;
- (id)recordIDForResourcesOfRecordWithScopedIdentifier:(id)arg1 databaseScope:(long long *)arg2 error:(id *)arg3;
- (id)_recordIDFromScopedIdentifier:(id)arg1 databaseScope:(long long *)arg2 error:(id *)arg3;
- (void)setCKReferenceWithScopedIdentifier:(id)arg1 forKey:(id)arg2 referenceAction:(unsigned long long)arg3;
- (void)setCKAsset:(id)arg1 forKey:(id)arg2;
- (void)setNonNilEncryptedObject:(id)arg1 forKey:(id)arg2;
- (void)setEncryptedObject:(id)arg1 forKey:(id)arg2;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (id)_copiedCKAsset:(id)arg1;
- (_Bool)_shouldUpdateKeyOnSharedCKRecord:(id)arg1;
- (void)_copyPrivateMasterWithScopedIdentifier:(id)arg1 masterTarget:(id)arg2 uploadIndex:(unsigned long long)arg3 reason:(id)arg4;
- (_Bool)_shouldUpdateKeyOnCKRecord:(id)arg1;
- (void)_noteMasterWillBeUploadedToSharedZone:(id)arg1;
- (void)_noteMasterWillBeUploadedToPrivateZone:(id)arg1;
- (id)rejectedScopedIdentifierForRejectedCKRecordID:(id)arg1;
- (id)scopedIdentifierForCKRecordID:(id)arg1;
- (id)scopeIdentifierFromZoneID:(id)arg1;
- (id)zoneIDFromScopeIdentifier:(id)arg1;
- (id)cloudKitScopeForScopeIdentifier:(id)arg1;
- (void)updateTargetMappingAfterUpload;
- (void)didFinishExecutingPlanWithError:(id)arg1;
- (void)didFinishUploadOfSharedRecordsWithError:(id)arg1;
- (void)uploadOfSharedRecordID:(id)arg1 didProgress:(double)arg2;
- (id)willUploadSharedRecords;
- (void)didFinishUploadOfRecordsWithError:(id)arg1;
- (void)uploadOfRecordID:(id)arg1 didProgress:(double)arg2;
- (id)willUploadRecords;
@property(readonly, nonatomic) double planProgess;
@property(readonly, nonatomic) double uploadedSize;
@property(readonly, nonatomic) NSArray *requestedPrivateCKRecordIDs;
- (_Bool)didFetchPrivateCKRecord:(id)arg1 forRecordWithRecordID:(id)arg2 error:(id *)arg3;
- (void)requestPrivateCKRecordWithRecordIDBeforeUpload:(id)arg1 fetchedBlock:(CDUnknownBlockType)arg2 reason:(id)arg3;
@property(readonly, nonatomic) NSArray *requestedSharedCKRecordIDs;
- (_Bool)didFetchSharedCKRecord:(id)arg1 forRecordWithRecordID:(id)arg2 error:(id *)arg3;
- (void)requestSharedCKRecordWithRecordIDBeforeUpload:(id)arg1 fetchedBlock:(CDUnknownBlockType)arg2 reason:(id)arg3;
- (void)uploadSharedCKRecord:(id)arg1 forScopedIdentifier:(id)arg2 triggeringKey:(id)arg3;
- (void)deleteSharedCKRecordWithRecordID:(id)arg1;
- (void)updatePrivateRecord:(id)arg1 sharedToRecordWithID:(id)arg2;
- (void)uploadCKRecord:(id)arg1 forScopedIdentifier:(id)arg2 triggeringKey:(id)arg3;
- (void)deleteCKRecordWithRecordID:(id)arg1;
- (void)_deleteSharedRecord;
- (void)_deleteRecord;
- (void)_addRecordWithScopedIdentifierToUnshareTodos:(id)arg1 recordClass:(Class)arg2 target:(id)arg3;
- (void)_addRecordWithScopedIdentifierToShareTodos:(id)arg1 recordClass:(Class)arg2 proposedContributorUserIdentifiers:(id)arg3 target:(id)arg4 force:(_Bool)arg5;
- (void)_dontUnshareRecordWithScopedIdentifier:(id)arg1 recordClass:(Class)arg2;
- (id)_shareTodoForRecordWithScopedIdentifier:(id)arg1 recordClass:(Class)arg2 proposedContributorUserIdentifiers:(id)arg3 target:(id)arg4;
- (void)_addCKRecordIDForResourcesUploadProgressTracking:(id)arg1 size:(double)arg2;
- (void)finalizePlan;
- (_Bool)planRecordChangeUpload:(id)arg1 error:(id *)arg2;
- (void)_resetPlannerState;
- (void)_willUpdateCKRecordWithID:(id)arg1 onBehalfOfRecordWithScopedIdentifier:(id)arg2;
- (void)_noteRecordWithScopedIdentifierWillMoveToSplitState:(id)arg1;
- (id)initWithScopeProvider:(id)arg1 destinationZoneIdentification:(id)arg2 sharedZoneIdentification:(id)arg3 propertyMapping:(id)arg4 currentUserRecordID:(id)arg5 targetMapping:(id)arg6 cplEnabledDate:(id)arg7;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

