//
//     Generated by class-dump 3.5 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//
//  Build 2022-10-30 xybp888 Dump.
//  

#import <CloudPhotoLibrary/CPLPlatformObject.h>

@class CKRecordZoneID, CPLCloudKitCoordinator, CPLCloudKitOperationsTracker, CPLCloudKitSimpleCache, CPLCloudKitTaskGroupThrottler, CPLDuetTicketProvider, FeatureChangeObserver, NSArray, NSDate, NSDictionary, NSError, NSIndexSet, NSMutableSet, NSObject, NSOperationQueue, NSString;
@protocol CPLSharedRecordPropertyMapping, NSObject, OS_dispatch_queue;

@interface CPLCloudKitTransport : CPLPlatformObject
{
    NSObject<OS_dispatch_queue> *_workQueue;
    NSOperationQueue *_workOperationQueue;
    CPLCloudKitOperationsTracker *_operationTracker;
    _Bool _mightRejectVideoStreaming;
    NSIndexSet *_rejectedVideoStreamingIntents;
    _Bool _rejectVideoStreamingAtContentLevel;
    NSArray *_rejectedVideoStreamingIntentNames;
    NSDictionary *_operationGroupMapping;
    NSMutableSet *_invalidaOperationGroupMappingEntries;
    CPLCloudKitSimpleCache *_streamingContentItemCache;
    CPLCloudKitTaskGroupThrottler *_resourceDownloadGate;
    CPLCloudKitTaskGroupThrottler *_streamingGate;
    CKRecordZoneID *_overridePrimarySyncZoneID;
    Class _overrideZoneIdentificationClass;
    NSString *_overrideNormalScopeIdentifier;
    CKRecordZoneID *_overrideNormalZoneID;
    id <NSObject> _identityChangeWatcher;
    id <NSObject>;
    unsigned long long _accountInfoFetchGeneration;
    NSDate *_lastAccountInfoUpdateDate;
    NSString *_lastDisablingReasonBecauseOfAccountStatus;
    NSString *_universeName;
    FeatureChangeObserver *_quotaNotificationToken;
    _Bool _opened;
    CDUnknownBlockType _shouldIgnoreZoneWithZoneID;
    CPLCloudKitCoordinator *_coordinator;
    CPLDuetTicketProvider *_duetTicketProvider;
    NSDate *_significantWorkBeginDate;
    NSError *_errorForAllOperations;
}

+ (id)_errorsByTaskForTasksByRecordId:(id)arg1 fromUnderlyingError:(id)arg2;
+ (id)_betterErrorForRecordId:(id)arg1 recordError:(id)arg2;
+ (_Bool)allowsUserInitiatedOperationsOverExpensiveNetwork;
+ (_Bool)allowsSyncOverCellular;
+ (void)setMainScopeZoneName:(id)arg1;
+ (id)mainScopeZoneName;
+ (void)configureForTestingInUniverseNamed:(id)arg1;
+ (void)initialize;
- (void).cxx_destruct;
@property(retain) NSError *errorForAllOperations; // @synthesize errorForAllOperations=_errorForAllOperations;
@property(retain, nonatomic) NSDate *significantWorkBeginDate; // @synthesize significantWorkBeginDate=_significantWorkBeginDate;
@property(readonly, retain, nonatomic) NSObject<OS_dispatch_queue> *workQueue; // @synthesize workQueue=_workQueue;
@property(readonly) CPLDuetTicketProvider *duetTicketProvider; // @synthesize duetTicketProvider=_duetTicketProvider;
@property(readonly) CPLCloudKitCoordinator *coordinator; // @synthesize coordinator=_coordinator;
@property(copy, nonatomic) CDUnknownBlockType shouldIgnoreZoneWithZoneID; // @synthesize shouldIgnoreZoneWithZoneID=_shouldIgnoreZoneWithZoneID;
@property _Bool opened; // @synthesize opened=_opened;
@property(readonly, nonatomic) CPLCloudKitOperationsTracker *operationTracker; // @synthesize operationTracker=_operationTracker;
@property(readonly) NSString *cloudKitClientIdentifier;
- (_Bool)shouldIgnoreZoneWithZoneID:(id)arg1;
- (id)databaseForOperationType:(long long)arg1 relativeToOperationType:(long long)arg2;
- (_Bool)shouldRunOperationsWithError:(id *)arg1;
- (void)processTaskErrorIfNeeded:(id)arg1 forTask:(id)arg2;
- (void)_noteContainerHasBeenWiped;
- (void)_failAllFutureOperationsWithContainerHasBeenWipedError;
@property(readonly, nonatomic) _Bool canBoostBackgroundOperations;
@property(readonly, nonatomic) _Bool canBoostOperations;
@property(readonly, nonatomic, getter=isForeground) _Bool foreground;
@property(readonly, nonatomic, getter=isNetworkConnected) _Bool networkConnected;
- (void)associateMetric:(id)arg1;
- (void)launchOperation:(id)arg1 type:(long long)arg2;
- (id)newOperationConfiguration;
- (id)zoneIdentificationForCloudKitScope:(id)arg1 engineScope:(id)arg2;
- (long long)scopeTypeForCloudKitScope:(id)arg1 proposedScopeType:(long long)arg2 fetchedRecords:(id)arg3 currentUserID:(id)arg4;
- (id)recordsToFetchToIdentifyCloudKitScope:(id)arg1 proposedScopeType:(long long)arg2 currentUserID:(id)arg3;
- (id)defaultZoneIDForMainScope;
- (id)mainScopeZoneIDFromZoneIDs:(id)arg1;
- (_Bool)isZoneIDForMainScopeIdentifier:(id)arg1;
- (id)rejectedScopedIdentifierForRejectedCKRecordID:(id)arg1;
- (id)scopedIdentifierForCKRecordID:(id)arg1;
- (id)scopeIdentifierFromZoneID:(id)arg1;
- (id)zoneIDFromScopeIdentifier:(id)arg1;
- (id)cloudKitScopeForScopeIdentifier:(id)arg1;
- (id)concreteScopeFromTransportScope:(id)arg1;
- (id)transportScopeFromConcreteScope:(id)arg1;
- (void)coordinator:(id)arg1 receivedPushNotification:(id)arg2;
- (void)coordinator:(id)arg1 provideCKAssetWithRecordID:(id)arg2 fieldName:(id)arg3 recordType:(id)arg4 signature:(id)arg5 completionHandler:(CDUnknownBlockType)arg6;
- (void)_withTempCKAssetForData:(id)arg1 block:(CDUnknownBlockType)arg2;
- (id)_tempDestinationURLForRecoveredDataWithError:(id *)arg1;
- (void)_cleanTempRecoveredDataURL:(id)arg1;
- (void)testKey:(id)arg1 value:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)getStatusDictionaryWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)getStatusWithCompletionHandler:(CDUnknownBlockType)arg1;
- (id)componentName;
- (id)tempCKAssetURL;
- (void)_disableSchedulerBecauseAccountIsUnavailableWithReason:(id)arg1;
- (void)_enableSchedulerBecauseAccountIsAvailable;
- (void)_updateStateWithAccountStatus:(long long)arg1;
- (void)_updateAccountInfo;
- (void)_forceUpdateAccountInfoWithReason:(id)arg1;
- (void)_stopWatchingAccountInfoChanges;
- (void)_startWatchingAccountInfoChanges;
- (id)createReschedulerForSession:(id)arg1;
- (void)dropPersistedInitialSyncSession;
- (void)findPersistedInitialSyncSession:(CDUnknownBlockType)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)createGroupForPropagateChanges;
- (id)createGroupForQueryUserIdentities;
- (id)createGroupForSharedLibraryRampCheck;
- (id)createGroupForExitSharedLibrary;
- (id)createGroupForCleanupLibrary;
- (id)createGroupForFetchingExistingSharedScope;
- (id)createGroupForAcceptingLibraryShare;
- (id)createGroupForFetchingLibraryShare;
- (id)createGroupForPublishingLibraryShare;
- (id)createGroupForAcceptingMomentShare;
- (id)createGroupForFetchingMomentShare;
- (id)createGroupForPublishingMomentShare;
- (id)createGroupForPruningCheck;
- (id)createGroupForAnalysisDownload;
- (id)createGroupForMovieStreamingWithIntent:(unsigned long long)arg1;
- (id)createGroupForDownloadWithIntent:(unsigned long long)arg1 priority:(unsigned long long)arg2;
- (id)createGroupForWidgetResourcesDownload;
- (id)createGroupForResourcesDownload;
- (id)createGroupForThumbnailsDownload;
- (id)createGroupForStagedScopeCleanup;
- (id)createGroupForReshare;
- (id)createGroupForFixUpTasks;
- (id)createGroupForChangeDownload;
- (id)createGroupForChangeUpload;
- (id)createGroupForLibraryStateCheck;
- (id)createGroupForFetchScopeListChanges;
- (id)createGroupForTransportScopeUpdate;
- (id)createGroupForTransportScopeDelete;
- (id)createGroupForFeedback;
- (id)createGroupForSetup;
- (id)createGroupForWidgetPrefetch;
- (id)createGroupForRecoveryDownload;
- (id)createGroupForMemoriesPrefetch;
- (id)createGroupForKeepOriginalsPrefetch;
- (id)createGroupForNonDerivativePrefetch;
- (id)createGroupForThumbnailPrefetch;
- (id)createGroupForPrefetch;
- (id)createGroupForInitialDownload;
- (id)createGroupForResetSync;
- (id)createGroupForInitialUpload;
- (id)createGroupForSendExitStatus;
- (id)createGroupAllowsCellular:(_Bool)arg1 foreground:(_Bool)arg2 upload:(_Bool)arg3 metadata:(_Bool)arg4;
- (void)upgradeFlags:(id)arg1 fromTransportScope:(id)arg2;
- (id)transportScopeForUpgradeFromScopeName:(id)arg1;
- (id)scopeNameForTransportScope:(id)arg1;
- (id)descriptionForTransportScope:(id)arg1;
- (id)tentativeConcreteScopeForScope:(id)arg1;
- (void)cancelBlockedTasksIncludingBackground:(_Bool)arg1;
- (void)noteClientIsInBackground;
- (void)noteClientIsInForeground;
- (void)noteClientIsEndingSignificantWork;
- (void)noteClientIsBeginningSignificantWork;
- (void)setShouldOverride:(_Bool)arg1 forSystemBudgets:(unsigned long long)arg2;
- (void)getSystemBudgetsWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)setIsSignificantWorkPending:(_Bool)arg1;
- (id)simpleDescriptionForScopeListSyncAnchor:(id)arg1;
- (_Bool)getProposedStagingScopeIdentifier:(id *)arg1 stagingTransportScope:(id *)arg2 forScope:(id)arg3 transportScope:(id)arg4 transportUserIdentifier:(id)arg5;
- (id)simpleDescriptionForSyncAnchor:(id)arg1;
- (id)bestErrorForUnderlyingError:(id)arg1;
- (_Bool)isResourceDynamic:(id)arg1;
- (id)sendFeedbackTaskForMessages:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)queryUserDetailsTaskForParticipants:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)cleanupStagedScope:(id)arg1 stagingScope:(id)arg2 destinationScope:(id)arg3 transportScopeMapping:(id)arg4 progressHandler:(CDUnknownBlockType)arg5 completionHandler:(CDUnknownBlockType)arg6;
- (id)sharedLibraryServerRampTaskWithCompletionHandler:(CDUnknownBlockType)arg1;
- (id)fixUpSparseRecordsTaskWithTasks:(id)arg1 transportScopeMapping:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (id)removeParticipantInSharedLibraryTaskFromSharedScope:(id)arg1 transportScope:(id)arg2 share:(id)arg3 retentionPolicy:(long long)arg4 exitSource:(long long)arg5 userIdentifiersToRemove:(id)arg6 participantIDsToRemove:(id)arg7 completionHandler:(CDUnknownBlockType)arg8;
- (id)startExitTaskFromSharedScope:(id)arg1 transportScope:(id)arg2 share:(id)arg3 retentionPolicy:(long long)arg4 exitSource:(long long)arg5 completionHandler:(CDUnknownBlockType)arg6;
- (id)fetchExistingSharedLibraryScopeTaskWithCompletionHandler:(CDUnknownBlockType)arg1;
- (id)acceptTaskForSharedScope:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)fetchTaskForScopeWithShareURL:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)updateShareTaskForScope:(id)arg1 transportScope:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (id)createScopeTaskForScope:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)inMemoryDownloadTaskForResource:(id)arg1 record:(id)arg2 target:(id)arg3 transportScopeMapping:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (id)resourcesDownloadTaskWithCompletionHandler:(CDUnknownBlockType)arg1;
- (id)rampingRequestTaskForResourceType:(unsigned long long)arg1 numRequested:(unsigned long long)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (id)resourceCheckTaskForResources:(id)arg1 targetMapping:(id)arg2 transportScopeMapping:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (id)getStreamingURLTaskForResource:(id)arg1 intent:(unsigned long long)arg2 hints:(id)arg3 timeRange:(CDStruct_e83c9415)arg4 target:(id)arg5 transportScopeMapping:(id)arg6 clientBundleID:(id)arg7 completionHandler:(CDUnknownBlockType)arg8;
- (id)fetchScopeListChangesForScopeListSyncAnchor:(id)arg1 progressHandler:(CDUnknownBlockType)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (id)downloadBatchTaskForSyncAnchor:(id)arg1 scope:(id)arg2 transportScopeMapping:(id)arg3 currentScopeChange:(id)arg4 progressHandler:(CDUnknownBlockType)arg5 completionHandler:(CDUnknownBlockType)arg6;
- (id)queryTaskForCursor:(id)arg1 class:(Class)arg2 scope:(id)arg3 transportScopeMapping:(id)arg4 progressHandler:(CDUnknownBlockType)arg5 completionHandler:(CDUnknownBlockType)arg6;
- (id)cleanupLibraryTaskDryRun:(_Bool)arg1 primaryScope:(id)arg2 brokenScope:(id)arg3 transportScopeMapping:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (id)fetchTransportScopeForScope:(id)arg1 transportScope:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (id)getCurrentSyncAnchorWithTransportScope:(id)arg1 scope:(id)arg2 previousScopeChange:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (id)getScopeInfoWithTransportScope:(id)arg1 scope:(id)arg2 previousScopeChange:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (id)updateTransportScope:(id)arg1 scope:(id)arg2 scopeChange:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (id)deleteTransportScope:(id)arg1 scope:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (id)reshareRecordsTaskWithRecords:(id)arg1 sourceScope:(id)arg2 destinationScope:(id)arg3 transportScopeMapping:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (id)uploadBatchTaskForBatch:(id)arg1 scope:(id)arg2 targetMapping:(id)arg3 transportScopeMapping:(id)arg4 progressHandler:(CDUnknownBlockType)arg5 completionHandler:(CDUnknownBlockType)arg6;
- (id)fetchRecordsTaskForRecordsWithScopedIdentifiers:(id)arg1 targetMapping:(id)arg2 transportScopeMapping:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (id)setupTaskUpdateDisabledFeatures:(_Bool)arg1 completionHandler:(CDUnknownBlockType)arg2;
@property(readonly, nonatomic) id <CPLSharedRecordPropertyMapping> propertyMapping;
@property(readonly, nonatomic) Class userIdentifierClass;
@property(readonly, nonatomic) Class transportGroupClass;
@property(readonly, nonatomic) NSString *universeName;
- (void)closeAndDeactivate:(_Bool)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)openWithCompletionHandler:(CDUnknownBlockType)arg1;
- (id)duetIdentifier;
- (void)duetTicketProviderBlockedStatusDidChange;
- (void)_updateBudgets;
- (id)engineLibrary;
- (void)_configureUniverse;
- (id)initWithAbstractObject:(id)arg1;
@property(readonly) _Bool isSystemLibrary;
- (id)_operationGroupNameForName:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

