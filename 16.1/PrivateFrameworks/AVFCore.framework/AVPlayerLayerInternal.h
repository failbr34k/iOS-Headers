//
//     Generated by class-dump 3.5 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//
//  Build 2022-10-30 xybp888 Dump.
//  

#import <objc/NSObject.h>

@class AVKeyPathDependencyManager, AVNetworkPlaybackPerfHUDLayer, AVPlayer, AVPlayerLayer, AVSinkSubscriber, CALayer, FigBaseCALayer, FigSubtitleCALayer, FigVideoContainerLayer, NSDictionary, NSString;
@protocol OS_dispatch_queue;

__attribute__((visibility("hidden")))
@interface AVPlayerLayerInternal : NSObject
{
    AVNetworkPlaybackPerfHUDLayer *hudLayer;
    NSObject<OS_dispatch_queue> *serialQueue;
    _Bool isPresentationLayer;
    struct OpaqueFigSimpleMutex *isReadyForDisplayMutex;
    NSObject<OS_dispatch_queue> *configurationQueue;
    AVKeyPathDependencyManager *dependencyManager;
    id playerItemHasEnqueuedVideoFrameListener;
    id windowSceneDidEnterBackgroundListener;
    id windowSceneWillEnterForegroundListener;
    AVPlayer *player;
    NSString *videoGravity;
    NSDictionary *pixelBufferAttributes;
    _Bool lanczosDownscalingEnabled;
    long long lanczosDownscalingFactor;
    FigBaseCALayer *maskLayer;
    FigVideoContainerLayer *videoLayer;
    FigSubtitleCALayer *subtitleLayer;
    FigBaseCALayer *closedCaptionLayer;
    AVPlayerLayer *interstitialLayer;
    _Bool isLegibleDisplayEnabled;
    _Bool isForScrubbingOnly;
    AVPlayerLayer *associatedRemoteModeLayer;
    _Bool willManageSublayersAsSwappedLayers;
    long long activeMode;
    _Bool isPartOfForegroundScene;
    _Bool showInterstitialInstead;
    _Bool isReadyForDisplay;
    AVPlayer *playerBeingObserved;
    struct CGSize latestAppliedPresentationSize;
    _Bool preventsChangesToSublayerHierarchy;
    NSDictionary *clientLayers;
    _Bool isPIPModeEnabled;
    CALayer *placeholderContentLayerDuringPIPMode;
    _Bool isConnectedToSecondScreen;
    struct NSEdgeInsets legibleContentInsets;
    _Bool honorContentScale;
    double screenScale;
    int lastWindowSceneEvent;
    _Bool isVisible;
    AVSinkSubscriber *playerCurrentItemSink;
    AVSinkSubscriber *currentItemPresentationSizeSink;
    AVSinkSubscriber *currentItemTracksSink;
    AVSinkSubscriber *currentItemNonForcedSubtitlesEnabledSink;
    AVSinkSubscriber *playerIsDisplayingClosedCaptionsSink;
}

@end

