//
//     Generated by class-dump 3.5 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//
//  Build 2022-10-30 xybp888 Dump.
//  

#import <objc/NSObject.h>

@class NSDictionary, NSString, TCCDMainSyncController, TCCDServer, TCCDSyncController;

@interface TCCDPlatform : NSObject
{
    _Bool _isChinaSKUDevice;
    NSDictionary *_configurationDictionary;
    NSString *_name;
    TCCDServer *_server;
    TCCDSyncController *_syncController;
    TCCDMainSyncController *_mainSyncController;
    NSDictionary *_servicesByName;
}

+ (id)allTCCEntitlements;
+ (id)currentPlatform;
+ (id)macOSPlatformNames;
+ (id)iosFamilyPlatformNames;
+ (id)allPlatformNames;
- (void).cxx_destruct;
@property(readonly) _Bool isChinaSKUDevice; // @synthesize isChinaSKUDevice=_isChinaSKUDevice;
@property(retain) NSDictionary *servicesByName; // @synthesize servicesByName=_servicesByName;
@property(retain) TCCDMainSyncController *mainSyncController; // @synthesize mainSyncController=_mainSyncController;
@property(retain) TCCDSyncController *syncController; // @synthesize syncController=_syncController;
@property __weak TCCDServer *server; // @synthesize server=_server;
@property(readonly) NSString *name; // @synthesize name=_name;
@property(readonly) NSDictionary *configurationDictionary; // @synthesize configurationDictionary=_configurationDictionary;
- (void)registerWithApplicationResolverSubjectIdentity:(id)arg1 processChain:(id)arg2;
- (_Bool)displayAlert:(id)arg1;
- (id)prefixOfBundleIdentifiersToResetAfterResetOfAppBundleIdentifier:(id)arg1;
- (_Bool)removalOfAppBundleIdentifierRequiresPruning:(id)arg1;
- (_Bool)isNonAppBundleIdentifierValid:(id)arg1;
- (void)runBacktraceToolOnProcess:(id)arg1 forService:(id)arg2;
- (void)prepareForAbort;
- (unsigned long long)evaluatePolicyForUsageStringAndPromptingForClient:(id)arg1 attributionChain:(id)arg2 service:(id)arg3 resultUsageString:(id *)arg4;
- (void)sendAnalyticsForAction:(long long)arg1 service:(id)arg2 subjectIdentity:(id)arg3 indirectObjectIdentity:(id)arg4 authValue:(unsigned long long)arg5 includeV1AuthValue:(_Bool)arg6 v1AuthValue:(unsigned long long)arg7;
- (void)sendAnalyticsForPlugin:(id)arg1 service:(id)arg2 API:(id)arg3;
- (void)updateAnalyticsEvent:(id)arg1 fromIdentity:(id)arg2 keyPrefix:(id)arg3;
- (id)stringForAnalyticsAction:(long long)arg1;
- (void)notifyUserOfDeniedAccessBy:(id)arg1 forService:(id)arg2;
- (id)appBundleURLContainingExecutableURL:(id)arg1;
- (id)bundleURLContainingExecutableURL:(id)arg1;
- (long long)promptingPolicyForService:(id)arg1 byIdentity:(id)arg2 attributionChain:(id)arg3;
- (void)handleCompositionType:(long long)arg1 forParentService:(id)arg2 forRequest:(id)arg3 intoReply:(id)arg4;
- (void)forwardMessage:(id)arg1 toUserTCCDFromAttributionChain:(id)arg2 forService:(id)arg3 andMergeReplyInto:(id)arg4 forConnnection:(id)arg5;
- (_Bool)sendMessageAsync:(id)arg1 toTCCDForTargetUID:(unsigned int)arg2 withReplyBlock:(CDUnknownBlockType)arg3;
- (id)sendMessageSync:(id)arg1 toTCCDForTargetUID:(unsigned int)arg2;
- (id)homeRelativePathToStateDirectory;
- (void)_invalidMethodForPlatform;
- (id)serviceByName:(id)arg1;
- (void)_configureServices;
- (id)description;
- (void)loadConfigurationDictionary;
- (id)initWithName:(id)arg1;

@end

