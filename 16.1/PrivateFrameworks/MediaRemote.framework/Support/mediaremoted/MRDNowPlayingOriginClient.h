//
//     Generated by class-dump 3.5 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//
//  Build 2022-10-30 xybp888 Dump.
//  

#import <objc/NSObject.h>

@class MRDDeviceInfoDataSource, MRDMediaRemoteClient, MRDNowPlayingClient, MRDNowPlayingDataSource, MRDeviceInfo, MRMutableApplicationActivity, MRNowPlayingAudioFormatContentInfo, MROSTransaction, MROrigin, MRPlayerPath, MSVPersistentTimer, NSArray, NSData, NSDate, NSDictionary, NSMutableArray, NSMutableDictionary, NSString;
@protocol MRDNowPlayingOriginClientDelegate, OS_dispatch_queue;

@interface MRDNowPlayingOriginClient : NSObject
{
    NSObject<OS_dispatch_queue> *_serialQueue;
    NSMutableArray *_nowPlayingClients;
    unsigned int _volumeControlCapabilities;
    float _volume;
    _Bool _isMuted;
    MRDeviceInfo *_deviceInfo;
    MRDNowPlayingClient *_explicitNowPlayingClient;
    MRDNowPlayingClient *_activeNowPlayingClient;
    MROSTransaction *_activeNowPlayingClientTransaction;
    NSMutableDictionary *_defaultSupportedCommandsData;
    MSVPersistentTimer *_playbackTimer;
    NSDate *_lastPlayingDate;
    MROrigin *_origin;
    MRPlayerPath *_playerPath;
    NSData *_deviceInfoData;
    MRMutableApplicationActivity *_activity;
    MRDMediaRemoteClient *_overrideClient;
    MRDNowPlayingDataSource *_nowPlayingDataSource;
    MRDDeviceInfoDataSource *_deviceInfoDataSource;
    NSDate *_registrationDate;
    NSArray *_activePlayerClients;
    id <MRDNowPlayingOriginClientDelegate> _delegate;
    MRDNowPlayingClient *_computedNowPlayingClient;
    MRDNowPlayingClient *_inferredNowPlayingClient;
}

- (void).cxx_destruct;
@property(retain, nonatomic) MRDNowPlayingClient *inferredNowPlayingClient; // @synthesize inferredNowPlayingClient=_inferredNowPlayingClient;
@property(retain, nonatomic) MRDNowPlayingClient *computedNowPlayingClient; // @synthesize computedNowPlayingClient=_computedNowPlayingClient;
@property(nonatomic) __weak id <MRDNowPlayingOriginClientDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) NSArray *activePlayerClients; // @synthesize activePlayerClients=_activePlayerClients;
@property(readonly, nonatomic) NSDate *registrationDate; // @synthesize registrationDate=_registrationDate;
@property(retain, nonatomic) MRDDeviceInfoDataSource *deviceInfoDataSource; // @synthesize deviceInfoDataSource=_deviceInfoDataSource;
@property(retain, nonatomic) MRDNowPlayingDataSource *nowPlayingDataSource; // @synthesize nowPlayingDataSource=_nowPlayingDataSource;
@property(retain, nonatomic) MRDNowPlayingClient *explicitNowPlayingClient; // @synthesize explicitNowPlayingClient=_explicitNowPlayingClient;
@property(retain, nonatomic) MRDMediaRemoteClient *overrideClient; // @synthesize overrideClient=_overrideClient;
@property(retain, nonatomic) MRMutableApplicationActivity *activity; // @synthesize activity=_activity;
@property(retain, nonatomic) NSData *deviceInfoData; // @synthesize deviceInfoData=_deviceInfoData;
@property(readonly, nonatomic) MRPlayerPath *playerPath; // @synthesize playerPath=_playerPath;
@property(readonly, nonatomic) MROrigin *origin; // @synthesize origin=_origin;
- (id)_playerPathForNowPlayingClient:(id)arg1;
- (unsigned int)_stateFromDataSource:(id)arg1;
- (void)_registerCallbacks;
- (void)_onQueue_maybeSavePlaybackStateForNotification:(id)arg1;
- (void)_onQueue_maybeSetupPlaybackTimeoutTimerForNotification:(id)arg1;
- (id)_onQueue_addNowPlayingClient:(id)arg1;
- (void)_onQueue_updateActivityStatus:(int)arg1;
- (void)_onQueue_reevaluateStateWithReason:(id)arg1;
- (id)_onQueue_calculateActiveNowPlayingPlayerClients;
- (unsigned int)_onQueue_calculateInferredPlaybackStateForPlayer:(id)arg1;
- (id)_onQueue_calculateInferredNowPlayingClient;
- (id)_onQueue_calculateComputedNowPlayingClient;
- (id)_onQueue_calculateActiveNowPlayingClient;
- (_Bool)_shouldHandleNotification:(id)arg1;
- (void)_handlePlayerDidRegister:(id)arg1;
- (void)_handleNowPlayingApplicationDidUnregisterCanBeNowPlaying:(id)arg1;
- (void)_handleActivePlayerDidChange:(id)arg1;
- (void)_handlePlayerPictureInPictureEnabledDidChange:(id)arg1;
- (void)_handlePlayerPropertiesDidChange:(id)arg1;
- (void)_handleOriginIsPlayingDidChange:(id)arg1;
- (void)_handlePlayerIsPlayingDidChange:(id)arg1;
- (void)_handleNowPlayingAppMaybeDidChange:(id)arg1;
- (void)deviceInfoDataSource:(id)arg1 deviceInfoDidChange:(id)arg2;
- (void)_onQueue_reloadInferredStateFromDataSource:(id)arg1 reason:(id)arg2;
- (void)nowPlayingDataSourceNowPlayingAudioFormatContentInfosDidChange:(id)arg1;
- (void)nowPlayingDataSourceNowPlayingSessionsPlaybackStateDidChange:(id)arg1;
- (void)nowPlayingDataSourceNowPlayingApplicationsPlaybackStateDidChange:(id)arg1;
- (void)nowPlayingDataSourceNowPlayingApplicationPlaybackStateDidChange:(id)arg1;
- (void)nowPlayingDataSourceNowPlayingApplicationDidChange:(id)arg1;
@property(readonly, nonatomic) MRNowPlayingAudioFormatContentInfo *nowPlayingAudioFormatContentInfo;
- (void)updateLastPlayingDate:(id)arg1;
- (void)clearDefaultSupportedCommandsData;
@property(readonly, nonatomic) NSDictionary *defaultSupportedCommands;
- (id)defaultSupportedCommandsForClient:(id)arg1;
- (id)defaultSupportedCommandsDataForClient:(id)arg1;
- (void)updateDefaultSupportedCommandsData:(id)arg1 forClient:(id)arg2;
- (void)_onQueue_removeNowPlayingClient:(id)arg1;
- (void)removeNowPlayingClientForClient:(id)arg1;
- (void)removeAllClients;
- (id)existingNowPlayingClientForClient:(id)arg1;
- (id)existingNowPlayingClientForDisplayID:(id)arg1;
- (id)existingNowPlayingClientForPid:(int)arg1;
- (id)existingNowPlayingClientForPlayerPath:(id)arg1;
- (id)nowPlayingClientForPlayerPath:(id)arg1;
- (id)nowPlayingClientForClient:(id)arg1;
@property(readonly, nonatomic) double timeSincePlaying;
@property(readonly, nonatomic) _Bool isPlaying;
@property(readonly, nonatomic) _Bool isActivityActive;
@property(readonly, nonatomic) MRDNowPlayingClient *activeNowPlayingClient;
@property(readonly, nonatomic) NSArray *mostRecentPlayers;
@property(readonly, nonatomic) NSArray *nowPlayingClients;
@property(nonatomic) _Bool isMuted;
@property(nonatomic) unsigned int volumeControlCapabilities;
@property(nonatomic) float volume;
@property(copy, nonatomic) MRDeviceInfo *deviceInfo;
@property(readonly, nonatomic) MRPlayerPath *activePlayerPath;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
- (id)initWithOrigin:(id)arg1;
- (id)activeContent;
- (_Bool)containsActiveStream;

// Remaining properties
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

