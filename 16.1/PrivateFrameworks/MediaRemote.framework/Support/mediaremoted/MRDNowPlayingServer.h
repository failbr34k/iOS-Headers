//
//     Generated by class-dump 3.5 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//
//  Build 2022-10-30 xybp888 Dump.
//  

#import <objc/NSObject.h>

@class MRDDeviceInfoDataSource, MRDElectedPlayerController, MRDLockScreenController, MRDNowPlayingClient, MRDNowPlayingOriginClient, MRDNowPlayingPlaybackQueueServer, MRDNowPlayingPlayerClient, MRDProximityController, MRPlayerPath, NSArray, NSHashTable, NSMutableArray, NSMutableDictionary, NSSet, NSString;
@protocol OS_dispatch_queue;

@interface MRDNowPlayingServer : NSObject
{
    NSObject<OS_dispatch_queue> *_serialQueue;
    NSMutableArray *_originClients;
    NSMutableDictionary *_nowPlayingApplicationIsPlayingStates;
    MRDNowPlayingPlaybackQueueServer *_playbackQueueServer;
    NSHashTable *_originForwarders;
    MRDDeviceInfoDataSource *_deviceInfoDataSource;
    MRDElectedPlayerController *_electedPlayerController;
    MRDLockScreenController *_lockScreenController;
    MRDProximityController *_proximityController;
    MRDNowPlayingOriginClient *_activeOriginClient;
    MRDNowPlayingOriginClient *_localOriginClient;
}

- (void).cxx_destruct;
@property(retain, nonatomic) MRDNowPlayingOriginClient *localOriginClient; // @synthesize localOriginClient=_localOriginClient;
@property(retain, nonatomic) MRDNowPlayingOriginClient *activeOriginClient; // @synthesize activeOriginClient=_activeOriginClient;
@property(readonly, nonatomic) MRDProximityController *proximityController; // @synthesize proximityController=_proximityController;
@property(readonly, nonatomic) MRDLockScreenController *lockScreenController; // @synthesize lockScreenController=_lockScreenController;
- (id)electedPlayerController;
- (id)_onQueue_originClientForGroupLeaderOfDeviceUID:(id)arg1;
- (id)_onQueue_originClientForDeviceUID:(id)arg1;
- (id)_onQueue_originClientForOrigin:(id)arg1;
- (id)_onQueue_restoredActiveOrigin;
- (void)_onQueue_savePersistentActiveOrigin:(id)arg1;
- (void)_onQueue_setActiveOrigin:(id)arg1 saveState:(_Bool)arg2;
- (void)setActiveOrigin:(id)arg1;
- (id)overrideClient;
- (void)setOverrideClient:(id)arg1;
- (void)_removeNowPlayingClient:(id)arg1 forOrigin:(id)arg2;
- (void)_removeOrigin:(id)arg1;
- (void)_addOrigin:(id)arg1 withDeviceInfo:(id)arg2 emitNotification:(_Bool)arg3;
- (_Bool)_hasForwarderForOrigin:(id)arg1;
- (void)unregisterOriginForwarder:(id)arg1;
- (void)registerOriginForwarder:(id)arg1;
- (id)augmentedUserInfoForPlayerPath:(id)arg1;
- (void)maybePostDistributedNotifications;
- (void)postLockScreenControlsDidChangeDistributedNotification;
- (void)postLockScreenPlayerPathDidChange:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (void)postLockScreenActiveDidChange:(_Bool)arg1 handler:(CDUnknownBlockType)arg2;
- (void)postLockScreenVisibleDidChange:(_Bool)arg1 handler:(CDUnknownBlockType)arg2;
- (void)postElectedPlayerDidChange:(id)arg1 change:(long long)arg2 event:(long long)arg3 reason:(id)arg4 handler:(CDUnknownBlockType)arg5;
- (void)postPlayerDidUnregisterWithPlaybackState:(unsigned int)arg1 canBeNowPlaying:(_Bool)arg2 forPlayerPath:(id)arg3 handler:(CDUnknownBlockType)arg4;
- (void)postPlayerDidRegisterForPlayerPath:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (void)postPlaybackQueueCapabilitiesDidChange:(unsigned long long)arg1 forPlayerPath:(id)arg2 handler:(CDUnknownBlockType)arg3;
- (void)postPlaybackQueueContentItemsArtworkDidChange:(id)arg1 forPlayerPath:(id)arg2 handler:(CDUnknownBlockType)arg3;
- (void)postPlaybackQueueContentItemsDidChange:(id)arg1 forPlayerPath:(id)arg2 handler:(CDUnknownBlockType)arg3;
- (void)postPlaybackQueueDidChange:(id)arg1 nowPlayingItemDidChange:(_Bool)arg2 forPlayerPath:(id)arg3 handler:(CDUnknownBlockType)arg4;
- (void)postSupportedCommandsDidChange:(id)arg1 forPlayerPath:(id)arg2 handler:(CDUnknownBlockType)arg3;
- (void)postNowPlayingPlayerStateDidChange:(id)arg1 forPlayerPath:(id)arg2 handler:(CDUnknownBlockType)arg3;
- (void)postPlaybackStateDidChange:(unsigned int)arg1 forPlayerPath:(id)arg2 handler:(CDUnknownBlockType)arg3;
- (void)postAudioFormatContentInfoDidChangeForOrigin:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (void)postActivePlayerPathsDidChangeForOrigin:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (void)postPictureInPictureDidChange:(_Bool)arg1 forPlayerPath:(id)arg2 handler:(CDUnknownBlockType)arg3;
- (void)postIsPlayingDidChange:(_Bool)arg1 lastPlayingTimestamp:(double)arg2 forPlayerPath:(id)arg3 handler:(CDUnknownBlockType)arg4;
- (void)postActivePlayerDidChangeForPlayerPath:(id)arg1 withPlaybackState:(unsigned int)arg2 handler:(CDUnknownBlockType)arg3;
- (void)postNowPlayingClientStateDidChange:(id)arg1 forPlayerPath:(id)arg2 handler:(CDUnknownBlockType)arg3;
- (void)postClientDidUnregisterForPlayerPath:(id)arg1 hasDefaultSupportedCommands:(_Bool)arg2 canBeNowPlaying:(_Bool)arg3 handler:(CDUnknownBlockType)arg4;
- (void)postClientDidRegisterForPlayerPath:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (void)postPlayerDidUnregisterCanBeNowPlayingForPlayerPath:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (void)postPlayerDidRegisterCanBeNowPlayingForPlayerPath:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (void)postClientDidUnregisterCanBeNowPlayingForPlayerPath:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (void)postClientDidRegisterCanBeNowPlayingForPlayerPath:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (void)postNowPlayingApplicationDidChangeForPlayerPath:(id)arg1 withPlaybackState:(unsigned int)arg2 handler:(CDUnknownBlockType)arg3;
- (void)postIsMutedDidChange:(id)arg1 isMuted:(_Bool)arg2 handler:(CDUnknownBlockType)arg3;
- (void)postVolumeCapabilitiesDidChange:(id)arg1 capabilities:(unsigned int)arg2 handler:(CDUnknownBlockType)arg3;
- (void)postVolumeDidChange:(id)arg1 volume:(float)arg2 handler:(CDUnknownBlockType)arg3;
- (void)postDeviceInfoDidChange:(id)arg1 previousDeviceInfo:(id)arg2 forOrigin:(id)arg3 handler:(CDUnknownBlockType)arg4;
- (void)postOriginDidUnRegister:(id)arg1 deviceInfo:(id)arg2 handler:(CDUnknownBlockType)arg3;
- (void)postOriginDidRegister:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (void)postActiveOriginDidChange:(id)arg1 withPlaybackState:(unsigned int)arg2 handler:(CDUnknownBlockType)arg3;
- (void)collectDiagnostic:(id)arg1;
@property(readonly, nonatomic) _Bool lockScreenPlatterActive;
- (void)lockScreenController:(id)arg1 playerPathDidChange:(id)arg2;
- (void)lockScreenController:(id)arg1 lockScreenWidgetVisibleDidChange:(_Bool)arg2;
- (void)lockScreenController:(id)arg1 lockScreenWidgetActiveDidChange:(_Bool)arg2;
- (void)electedPlayerController:(id)arg1 electedPlayerDidChange:(id)arg2 change:(long long)arg3 event:(long long)arg4 reason:(id)arg5;
- (void)nowPlayingServer:(id)arg1 activeOriginDidChangeFromOriginClient:(id)arg2 toOriginClient:(id)arg3;
- (void)nowPlayingOriginClientDidChangeAudioFormatContentInfo:(id)arg1;
- (void)nowPlayingOriginClientPlaybackDidTimeout:(id)arg1;
- (void)nowPlayingOriginClient:(id)arg1 activePlayerClientsDidChange:(id)arg2;
- (void)nowPlayingOriginClient:(id)arg1 currentRouteIsMutedDidChange:(_Bool)arg2;
- (void)nowPlayingOriginClient:(id)arg1 currentRouteVolumeDidChange:(float)arg2;
- (void)nowPlayingOriginClient:(id)arg1 currentRouteVolumeControlCapabilitiesDidChange:(unsigned int)arg2;
- (void)nowPlayingOriginClient:(id)arg1 clientDidUnregister:(id)arg2;
- (void)nowPlayingOriginClient:(id)arg1 clientDidRegister:(id)arg2;
- (void)nowPlayingOriginClient:(id)arg1 deviceInfoDidChange:(id)arg2 previousDeviceInfo:(id)arg3;
- (void)nowPlayingOriginClient:(id)arg1 applicationActivityStatusDidChange:(id)arg2;
- (void)nowPlayingOriginClient:(id)arg1 applicationActivityDidEnd:(id)arg2;
- (void)nowPlayingOriginClient:(id)arg1 applicationActivityDidBegin:(id)arg2;
- (void)nowPlayingOriginClient:(id)arg1 activePlayerPathDidChange:(id)arg2 withPlaybackState:(unsigned int)arg3;
- (void)nowPlayingClient:(id)arg1 applicationDidForeground:(_Bool)arg2;
- (void)nowPlayingPlayerClient:(id)arg1 clientCanBeNowPlayingDidChange:(_Bool)arg2;
- (void)nowPlayingClient:(id)arg1 playerDidUnregister:(id)arg2;
- (void)nowPlayingClient:(id)arg1 playerDidRegister:(id)arg2;
- (void)nowPlayingClient:(id)arg1 clientStateDidChange:(id)arg2;
- (void)nowPlayingClient:(id)arg1 activePlayerDidChangeFromPlayerClient:(id)arg2 toPlayerClient:(id)arg3;
- (void)nowPlayingPlayerClient:(id)arg1 playerCanBeNowPlayingDidChange:(_Bool)arg2;
- (void)nowPlayingPlayerClient:(id)arg1 pictureInPictureEnabledDidChange:(_Bool)arg2;
- (void)nowPlayingPlayerClient:(id)arg1 playbackQueueArtworkContentItemsDidChange:(id)arg2;
- (void)nowPlayingPlayerClient:(id)arg1 playbackQueueContentItemsDidChange:(id)arg2;
- (void)nowPlayingPlayerClient:(id)arg1 playbackQueueCapabilitiesDidChange:(unsigned long long)arg2;
- (void)nowPlayingPlayerClient:(id)arg1 playbackQueueDidChange:(id)arg2 nowPlayingItemDidChange:(_Bool)arg3;
- (void)nowPlayingPlayerClient:(id)arg1 supportedCommandsDidChange:(id)arg2;
- (void)nowPlayingPlayerClient:(id)arg1 playbackStateDidChange:(unsigned int)arg2;
- (void)nowPlayingPlayerClient:(id)arg1 isPlayingDidChange:(_Bool)arg2;
- (void)nowPlayingPlayerClient:(id)arg1 playerStateDidChange:(id)arg2;
- (void)_handleGetAudioFormatContentInfoForOriginMessage:(id)arg1 fromClient:(id)arg2;
- (void)_handleRegisterForWakingNowPlayingNotifications:(id)arg1 fromClient:(id)arg2;
- (void)_handleSetOriginClientPropertiesMessage:(id)arg1 fromClient:(id)arg2;
- (void)_handleSetPlayerClientPropertiesMessage:(id)arg1 fromClient:(id)arg2;
- (void)_handleGetLastPlayingDateMessage:(id)arg1 fromClient:(id)arg2;
- (void)_handleSetDefaultSupportedCommandsMessage:(id)arg1 fromClient:(id)arg2;
- (void)_handleSetSupportedCommandsMessage:(id)arg1 fromClient:(id)arg2;
- (void)_handleGetSupportedCommandsMessage:(id)arg1 fromClient:(id)arg2;
- (void)_handlePlaybackSessionRequest:(id)arg1 fromClient:(id)arg2;
- (void)_handleGetElectedPlayerPathMessage:(id)arg1 fromClient:(id)arg2;
- (void)_handleGetDeviceInfo:(id)arg1 fromClient:(id)arg2;
- (void)_handleContentItemArtworkChangedMessage:(id)arg1 fromClient:(id)arg2;
- (void)_handleContentItemChangedMessage:(id)arg1 fromClient:(id)arg2;
- (void)_handleSetPlayerPictureInPictureEnabledMessage:(id)arg1 fromClient:(id)arg2;
- (void)_handleGetPlayerPictureInPictureEnabledMessage:(id)arg1 fromClient:(id)arg2;
- (void)_handleGetActivePlayerPathsForLocalOriginMessage:(id)arg1 fromClient:(id)arg2;
- (void)_handleRemoveNowPlayingPlayerMessage:(id)arg1 fromClient:(id)arg2;
- (void)_handleGetNowPlayingPlayerMessage:(id)arg1 fromClient:(id)arg2;
- (void)_handleSetNowPlayingPlayerMessage:(id)arg1 fromClient:(id)arg2;
- (void)_handleGetNowPlayingPlayersMessage:(id)arg1 fromClient:(id)arg2;
- (void)_handleRemoveNowPlayingClientMessage:(id)arg1 fromClient:(id)arg2;
- (void)_handleGetNowPlayingClientMessage:(id)arg1 fromClient:(id)arg2;
- (void)_handleSetNowPlayingClientMessage:(id)arg1 fromClient:(id)arg2;
- (void)_handleGetNowPlayingClientsMessage:(id)arg1 fromClient:(id)arg2;
- (void)_handleResolvePlayerPath:(id)arg1 fromClient:(id)arg2;
- (void)_handleSendLyricsEvent:(id)arg1 fromClient:(id)arg2;
- (void)_handleRequestAudioAmplitudeSamplesMessage:(id)arg1 fromClient:(id)arg2;
- (void)_handleRequestVideoThumbnailsMessage:(id)arg1 fromClient:(id)arg2;
- (void)_handleGetAnyAppIsPlayingMessage:(id)arg1 fromClient:(id)arg2;
- (void)_handleSetPlaybackStateMessage:(id)arg1 fromClient:(id)arg2;
- (void)_handleGetPlaybackStateMessage:(id)arg1 fromClient:(id)arg2;
- (void)_handleUpdatePlayerPropertiesMessage:(id)arg1 fromClient:(id)arg2;
- (void)_handleSetPlayerPropertiesMessage:(id)arg1 fromClient:(id)arg2;
- (void)_handleGetPlayerPropertiesMessage:(id)arg1 fromClient:(id)arg2;
- (void)_handleUpdateClientPropertiesMessage:(id)arg1 fromClient:(id)arg2;
- (void)_handleSetClientPropertiesMessage:(id)arg1 fromClient:(id)arg2;
- (void)_handleGetClientPropertiesMessage:(id)arg1 fromClient:(id)arg2;
- (void)_handleResetPlaybackQueueRequests:(id)arg1 fromClient:(id)arg2;
- (void)_handleSetHardwareRemoteBehaviorMessage:(id)arg1 fromClient:(id)arg2;
- (void)_handleSetPlaybackQueueCapabilties:(id)arg1 fromClient:(id)arg2;
- (void)_handleRequestPlaybackQueueCapabilties:(id)arg1 fromClient:(id)arg2;
- (void)_handleSetPlaybackQueue:(id)arg1 fromClient:(id)arg2;
- (void)_handleEndApplicationActivityMessage:(id)arg1 fromClient:(id)arg2;
- (void)_handleGetApplicationActivityMessage:(id)arg1 fromClient:(id)arg2;
- (void)_handleBeginApplicationActivityMessage:(id)arg1 fromClient:(id)arg2;
- (void)_handleSetCanBeNowPlayingPlayerMessage:(id)arg1 fromClient:(id)arg2;
- (void)_handleSetCanBeNowPlayingAppMessage:(id)arg1 fromClient:(id)arg2;
- (void)_handleSetOverriddenNowPlayingAppMessage:(id)arg1 fromClient:(id)arg2;
- (void);
- (void)updateDeviceInfo:(id)arg1 origin:(id)arg2;
- (void)unregisterOrigin:(id)arg1;
- (void)reregisterOrigin:(id)arg1 deviceInfo:(id)arg2;
- (void)registerOrigin:(id)arg1 deviceInfo:(id)arg2;
- (void)_handleGetActiveOriginMessage:(id)arg1 fromClient:(id)arg2;
- (void)_handleSetActiveOriginMessage:(id)arg1 fromClient:(id)arg2;
- (void)_handleGetAvailableOriginsMessage:(id)arg1 fromClient:(id)arg2;
- (void)restoreClientState:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (void)restoreDeviceInfoToClient:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (void)clearNowPlayingClientForXPCClient:(id)arg1;
- (id)originClientForGroupLeaderOfDeviceUID:(id)arg1;
- (id)originClientForDeviceUID:(id)arg1;
- (id)originClientForOrigin:(id)arg1;
- (id)localPlayersForXpcClient:(id)arg1;
- (id)xpcClientForPlayerPath:(id)arg1;
- (id)_onQueue_queryPlayerPath:(id)arg1;
- (id)queryPlayerPath:(id)arg1;
- (id)resolveExistingPlayerPath:(id)arg1;
- (id)resolvePlayerPath:(id)arg1 fromClient:(id)arg2 useDefaultPlayerIfNoneSpecified:(_Bool)arg3;
- (id)resolvePlayerPath:(id)arg1 fromClient:(id)arg2;
- (id)queryExistingPlayerPathForXPCMessage:(id)arg1 forClient:(id)arg2;
- (id)queryPlayerPathForXPCMessage:(id)arg1 fromClient:(id)arg2;
@property(readonly, nonatomic) NSArray *originClients;
- (id)_onQueue_allNowPlayingInfoClientsForOrigin:(id)arg1;
@property(readonly, nonatomic) NSSet *allLocalNowPlayingInfoClients;
- (id)_onQueue_allNowPlayingInfoClients;
@property(readonly, nonatomic) NSSet *allNowPlayingInfoClients;
@property(readonly, nonatomic) MRPlayerPath *localActivePlayerPath;
@property(readonly, nonatomic) MRPlayerPath *activePlayerPath;
- (id)_onQueue_companionOriginClient;
- (id)_onQueue_activeOriginClient;
@property(readonly, nonatomic) MRDNowPlayingOriginClient *companionOriginClient;
@property(readonly, nonatomic) MRDNowPlayingClient *localActiveNowPlayingClient;
@property(readonly, nonatomic) MRDNowPlayingClient *activeNowPlayingClient;
@property(readonly, nonatomic) MRDNowPlayingPlayerClient *localActivePlayerClient;
@property(readonly, nonatomic) MRDNowPlayingPlayerClient *activePlayerClient;
@property(readonly, nonatomic) unsigned int localActivePlayerPlaybackState;
@property(readonly, nonatomic) unsigned int activePlayerPlaybackState;
@property(readonly, nonatomic) _Bool localActivePlayerIsPlaying;
@property(readonly, nonatomic) _Bool activePlayerIsPlaying;
@property(readonly, nonatomic) NSString *localActiveClientBundleIdentifier;
@property(readonly, nonatomic) NSString *activeClientBundleIdentifier;
@property(readonly, nonatomic) int localActiveClientPID;
@property(readonly, nonatomic) int activeClientPID;
- (void)handleXPCMessage:(id)arg1 fromClient:(id)arg2;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

