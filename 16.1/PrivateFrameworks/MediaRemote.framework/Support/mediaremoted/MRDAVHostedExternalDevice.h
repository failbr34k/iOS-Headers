//
//     Generated by class-dump 3.5 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//
//  Build 2022-10-30 xybp888 Dump.
//  

#import <objc/NSObject.h>

@class MRAVDistantEndpoint, MRAVRoutingDiscoverySession, MRDConnectionLifetimeController, MRExternalDevice, MRExternalOutputContextDataSource, MROrigin, NSArray, NSDate, NSError, NSMutableSet, NSString, NSXPCListener, NSXPCListenerEndpoint;
@protocol OS_dispatch_queue;

@interface MRDAVHostedExternalDevice : NSObject
{
    _Bool _useOutputDeviceCache;
    _Bool _tombstoned;
    NSArray *_subscribedPlayerPaths;
    MRExternalDevice *_externalDevice;
    MRAVDistantEndpoint *_endpoint;
    NSXPCListener *_xpcListener;
    NSObject<OS_dispatch_queue> *_serialQueue;
    NSObject<OS_dispatch_queue> *_externalDeviceCallbackQueue;
    NSMutableSet *_mutableExternalDeviceClients;
    MRExternalOutputContextDataSource *_externalOutputContext;
    MRAVRoutingDiscoverySession *_silentDiscoverySession;
    NSError *_canMigrateToLocalEndpointError;
    MRDConnectionLifetimeController *_lifetimeController;
    NSDate *_canMigrateEvaluationTimestamp;
}

- (void).cxx_destruct;
@property(retain, nonatomic) NSDate *canMigrateEvaluationTimestamp; // @synthesize canMigrateEvaluationTimestamp=_canMigrateEvaluationTimestamp;
@property(retain, nonatomic) MRDConnectionLifetimeController *lifetimeController; // @synthesize lifetimeController=_lifetimeController;
@property(retain, nonatomic) NSError *canMigrateToLocalEndpointError; // @synthesize canMigrateToLocalEndpointError=_canMigrateToLocalEndpointError;
@property(retain, nonatomic) MRAVRoutingDiscoverySession *silentDiscoverySession; // @synthesize silentDiscoverySession=_silentDiscoverySession;
@property(nonatomic) _Bool tombstoned; // @synthesize tombstoned=_tombstoned;
@property(nonatomic) _Bool useOutputDeviceCache; // @synthesize useOutputDeviceCache=_useOutputDeviceCache;
@property(readonly, nonatomic) MRExternalOutputContextDataSource *externalOutputContext; // @synthesize externalOutputContext=_externalOutputContext;
@property(retain, nonatomic) NSMutableSet *mutableExternalDeviceClients; // @synthesize mutableExternalDeviceClients=_mutableExternalDeviceClients;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *externalDeviceCallbackQueue; // @synthesize externalDeviceCallbackQueue=_externalDeviceCallbackQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *serialQueue; // @synthesize serialQueue=_serialQueue;
@property(retain, nonatomic) NSXPCListener *xpcListener; // @synthesize xpcListener=_xpcListener;
@property(readonly, nonatomic) MRAVDistantEndpoint *endpoint; // @synthesize endpoint=_endpoint;
@property(copy, nonatomic) NSArray *subscribedPlayerPaths; // @synthesize subscribedPlayerPaths=_subscribedPlayerPaths;
- (_Bool)_onSerialQueue_isEndpointsDesignatedGroupLeader:(id)arg1;
- (_Bool)_endpointIsSolo:(id)arg1;
- (_Bool)_endpointSupportsVolumeControl:(id)arg1;
- (_Bool)_endpointShouldNotifyClientsOfTopologyChanges:(id)arg1;
- (_Bool)_endpointShouldPostVolumeNotifications:(id)arg1 outputDevice:(id)arg2;
- (void)_onSerialQueue_reevaluateVolumeControlCapabilitiesForEndpoint:(id)arg1;
- (void)_maybePostEndpointDidRemoveOutputDevice:(id)arg1;
- (void)_maybePostEndpointDidChangeOutputDevice:(id)arg1;
- (void)_maybePostVolumeDidChange:(float)arg1 outputDevice:(id)arg2;
- (void)_maybePostVolumeControlCapabilitiesDidChange:(unsigned int)arg1 outputDevice:(id)arg2;
- (void)_maybePostEndpointDidAddOutputDevice:(id)arg1;
- (void)_reloadHostedExternalDeviceSubscribedPlayerPaths;
- (void)_reloadHostedExternalDeviceNotifications;
- (void)_reloadHostedExternalDeviceCallbacks;
- (void)_reloadEndpoint;
- (void)registerForOutputContextNotifications:(id)arg1;
- (void)_initializeExternalDevice:(id)arg1;
- (id)_connectedExternalDeviceClients;
- (id)_mutableExternalDeviceClientsWithRegisteredNotification:(unsigned long long)arg1;
- (id)_mutableExternalDeviceClientsWithRegisteredCallbacks:(unsigned long long)arg1;
- (id);
- (id)_externalDeviceClientForConnection:(id)arg1;
- (void)_externalDeviceClientDidInvalidate:(id)arg1;
- (void)discoveryOutputDevicesChanged:(id)arg1 forConfiguration:(id)arg2;
- (void)hostedExternalDeviceEndpoint:(id)arg1 didRemoveOutputDevice:(id)arg2;
- (void)hostedExternalDeviceEndpoint:(id)arg1 didChangeOutputDevice:(id)arg2;
- (void)hostedExternalDeviceEndpoint:(id)arg1 didAddOutputDevice:(id)arg2;
- (void)hostedExternalDeviceEndpoint:(id)arg1 volumeDidChange:(float)arg2 forOutputDevice:(id)arg3;
- (void)hostedExternalDeviceEndpoint:(id)arg1 volumeCapabilitiesDidChange:(unsigned int)arg2 forOutputDevice:(id)arg3;
- (void)hostedExternalDeviceEndpointDidChange:(id)arg1;
- (void)hostedExternalDeviceDidReceiveCustomData:(id)arg1 withName:(id)arg2;
- (void)hostedExternalDeviceNameDidChange:(id)arg1;
- (void)hostedExternalDeviceConnectionStateDidChange:(unsigned int)arg1 withError:(id)arg2;
- (void)outputContextDataSourceDidRemoveOutputDevice:(id)arg1;
- (void)outputContextDataSourceDidChangeOutputDevice:(id)arg1;
- (void)outputContextDataSourceDidAddOutputDevice:(id)arg1;
- (void)outputContextDataSourceOutputDeviceDidChangeVolumeControlCapabilities:(id)arg1;
- (void)outputContextDataSourceOutputDeviceDidChangeVolume:(id)arg1;
- (void)_processCanMigrateToLocalEndpointEvent:(id)arg1 timestamp:(id)arg2 error:(id)arg3;
- (void)_handleMaybeCanMigrateToLocalEndpointDidChange:(id)arg1;
- (void)_handleExternalDeviceConnectionDidChange:(id)arg1;
- (void)disconnectOrigin:(id)arg1;
@property(readonly, nonatomic) MROrigin *origin;
- (void)expanseManagerTelevisionDidLeaveSession:(id)arg1;
- (void)expanseManagerTelevisionDidJoinSession:(id)arg1;
- (void)getExternalOutputContextWithCompletion:(CDUnknownBlockType)arg1;
- (void)setDiscoveryMode:(unsigned int)arg1 forConfiguration:(id)arg2;
- (void)getPersonalOutputDevices:(CDUnknownBlockType)arg1;
- (void)sendButtonEventWithUsagePage:(unsigned int)arg1 usage:(unsigned int)arg2 down:(_Bool)arg3;
- (void)pingWithTimeout:(double)arg1 callback:(CDUnknownBlockType)arg2;
- (void)sendCustomData:(id)arg1 withName:(id)arg2;
- (void)createHostedEndpointWithOutputDeviceUIDs:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)modifyByAddingDeviceUIDs:(id)arg1 removingDeviceUIDs:(id)arg2 settingDeviceUIDs:(id)arg3 addingClusterDeviceUIDs:(id)arg4 removingClusterDeviceUIDs:(id)arg5 settingClusterDeviceUIDs:(id)arg6 completion:(CDUnknownBlockType)arg7;
- (void)setListeningMode:(id)arg1 outputDeviceUID:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)outputDeviceVolumeControlCapabilities:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)outputDeviceVolume:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)setOutputDeviceVolume:(float)arg1 forOutputDevice:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;
- (void)unpair;
- (void)disconnect:(id)arg1;
- (void)connectWithOptions:(unsigned int)arg1 userInfo:(id)arg2;
- (void)setNotifications:(unsigned long long)arg1;
- (unsigned long long)notifications;
- (void)setRegisteredCallbacks:(unsigned long long)arg1;
- (unsigned long long)registeredCallbacks;
- (void)getConnectionStateWithCompletion:(CDUnknownBlockType)arg1;
- (void)getCustomOriginDataWithCompletion:(CDUnknownBlockType)arg1;
- (void)getExternalDeviceIsPairedWithCompletion:(CDUnknownBlockType)arg1;
- (void)getExternalDeviceMetadataWithCompletion:(CDUnknownBlockType)arg1;
- (_Bool)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2;
@property(readonly, nonatomic) NSArray *personalOutputDevices;
- (void)tombstone;
@property(readonly, nonatomic) NSString *outputDeviceUID;
- (id)externalDeviceClients;
@property(readonly, nonatomic) NSXPCListenerEndpoint *externalDeviceListenerEndpoint;
@property(readonly, nonatomic) MRExternalDevice *externalDevice; // @synthesize externalDevice=_externalDevice;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)initWithExternalDevice:(id)arg1;

// Remaining properties
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

