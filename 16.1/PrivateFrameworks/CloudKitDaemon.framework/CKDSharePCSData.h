//
//     Generated by class-dump 3.5 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//
//  Build 2022-10-30 xybp888 Dump.
//  

@class CKRecordID, NSData, NSString;

@interface CKDSharePCSData
{
    CKRecordID *_shareID;
    unsigned long long _serviceType;
    NSString *_shareEtag;
    long long _publicPermission;
    long long _myParticipantRole;
    long long _myParticipantPermission;
    struct _OpaquePCSShareProtection *_myParticipantPCS;
    NSData *_myParticipantPCSData;
    struct _OpaquePCSShareProtection *_preKeyRollInvitedPCS;
    struct _OpaquePCSShareProtection *_publicPCS;
    NSString *_publicPCSEtag;
    NSData *_publicPCSData;
}

+ (_Bool)supportsSecureCoding;
+ (id)dataWithShareID:(id)arg1 pcsData:(id)arg2;
+ (id)dataWithShare:(id)arg1 serviceType:(unsigned long long)arg2;
- (void).cxx_destruct;
@property(copy, nonatomic) NSData *publicPCSData; // @synthesize publicPCSData=_publicPCSData;
@property(copy, nonatomic) NSString *publicPCSEtag; // @synthesize publicPCSEtag=_publicPCSEtag;
@property(nonatomic) struct _OpaquePCSShareProtection *publicPCS; // @synthesize publicPCS=_publicPCS;
@property(nonatomic) struct _OpaquePCSShareProtection *preKeyRollInvitedPCS; // @synthesize preKeyRollInvitedPCS=_preKeyRollInvitedPCS;
@property(copy, nonatomic) NSData *myParticipantPCSData; // @synthesize myParticipantPCSData=_myParticipantPCSData;
@property(nonatomic) struct _OpaquePCSShareProtection *myParticipantPCS; // @synthesize myParticipantPCS=_myParticipantPCS;
@property(nonatomic) long long myParticipantPermission; // @synthesize myParticipantPermission=_myParticipantPermission;
@property(nonatomic) long long myParticipantRole; // @synthesize myParticipantRole=_myParticipantRole;
@property(nonatomic) long long publicPermission; // @synthesize publicPermission=_publicPermission;
@property(retain, nonatomic) NSString *shareEtag; // @synthesize shareEtag=_shareEtag;
@property(nonatomic) unsigned long long serviceType; // @synthesize serviceType=_serviceType;
@property(retain, nonatomic) CKRecordID *shareID; // @synthesize shareID=_shareID;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)CKPropertiesDescription;
@property(nonatomic) struct _OpaquePCSShareProtection *invitedPCS;
- (void)dealloc;
- (id)initWithShareID:(id)arg1 pcsData:(id)arg2;

@end

