//
//     Generated by class-dump 3.5 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//
//  Build 2022-10-30 xybp888 Dump.
//  

#import <objc/NSObject.h>

@class HFAccessoryBrowsingManager, HFDiscoveredAccessory, HMHome, HMSetupAccessoryDescription, HSAccessoryPairingFuture, HSAccessoryTuple, HSEntitlementContext, MTSDeviceSetupRequest, NAFuture, NSArray, NSDictionary, NSString, NSUUID;
@protocol HSProxCardCoordinatorDelegate;

@interface HSProxCardCoordinator : NSObject
{
    _Bool _setupSpecificAccessory;
    _Bool _userDidSelectAccessories;
    _Bool _didShowCustomCommissioningFlowAlertIfNecessary;
    id <HSProxCardCoordinatorDelegate> _delegate;
    long long _accessoryCommunicationProtocol;
    HFAccessoryBrowsingManager *_accessoryBrowser;
    HSEntitlementContext *_entitlementContext;
    NSUUID *_suggestedRoomUUID;
    HMSetupAccessoryDescription *_setupAccessoryDescription;
    HSAccessoryTuple *_topAccessoryTuple;
    HSAccessoryTuple *_activeTuple;
    HSAccessoryPairingFuture *_pairingFuture;
    NSArray *_bridgedAccessories;
    NSString *_setupCode;
    HFDiscoveredAccessory *_discoveredAccessory;
    NAFuture *_matterSetupPairingWindowReadyFuture;
    unsigned long long _pairingState;
    NSDictionary *_bridgedAccessoryCategoryToArrayMap;
}

- (void).cxx_destruct;
@property(nonatomic) _Bool didShowCustomCommissioningFlowAlertIfNecessary; // @synthesize didShowCustomCommissioningFlowAlertIfNecessary=_didShowCustomCommissioningFlowAlertIfNecessary;
@property(nonatomic) _Bool userDidSelectAccessories; // @synthesize userDidSelectAccessories=_userDidSelectAccessories;
@property(retain, nonatomic) NSDictionary *bridgedAccessoryCategoryToArrayMap; // @synthesize bridgedAccessoryCategoryToArrayMap=_bridgedAccessoryCategoryToArrayMap;
@property(nonatomic) unsigned long long pairingState; // @synthesize pairingState=_pairingState;
@property(retain, nonatomic) NAFuture *matterSetupPairingWindowReadyFuture; // @synthesize matterSetupPairingWindowReadyFuture=_matterSetupPairingWindowReadyFuture;
@property(readonly, nonatomic) HFDiscoveredAccessory *discoveredAccessory; // @synthesize discoveredAccessory=_discoveredAccessory;
@property(readonly, nonatomic) NSString *setupCode; // @synthesize setupCode=_setupCode;
@property(retain, nonatomic) NSArray *bridgedAccessories; // @synthesize bridgedAccessories=_bridgedAccessories;
@property(retain, nonatomic) HSAccessoryPairingFuture *pairingFuture; // @synthesize pairingFuture=_pairingFuture;
@property(retain, nonatomic) HSAccessoryTuple *activeTuple; // @synthesize activeTuple=_activeTuple;
@property(retain, nonatomic) HSAccessoryTuple *topAccessoryTuple; // @synthesize topAccessoryTuple=_topAccessoryTuple;
@property(retain, nonatomic) HMSetupAccessoryDescription *setupAccessoryDescription; // @synthesize setupAccessoryDescription=_setupAccessoryDescription;
@property(readonly, nonatomic) NSUUID *suggestedRoomUUID; // @synthesize suggestedRoomUUID=_suggestedRoomUUID;
@property(readonly, nonatomic) HSEntitlementContext *entitlementContext; // @synthesize entitlementContext=_entitlementContext;
@property(retain, nonatomic) HFAccessoryBrowsingManager *accessoryBrowser; // @synthesize accessoryBrowser=_accessoryBrowser;
@property(nonatomic) long long accessoryCommunicationProtocol; // @synthesize accessoryCommunicationProtocol=_accessoryCommunicationProtocol;
@property(readonly, nonatomic) _Bool setupSpecificAccessory; // @synthesize setupSpecificAccessory=_setupSpecificAccessory;
@property(nonatomic) __weak id <HSProxCardCoordinatorDelegate> delegate; // @synthesize delegate=_delegate;
- (id)showCustomCommissioningFlowAlertIfNecessaryForPayload:(id)arg1 onViewController:(id)arg2;
- (void)updateSetupAccessoryDescriptionWithPayload:(id)arg1;
- (id)didReceiveSetupCode:(id)arg1 fromViewController:(id)arg2;
- (id)didReceiveDiscoveredAccessory:(id)arg1;
- (void)setSetupCode:(id)arg1;
- (id)_discoveredAccessoryOrSetupCodeDidUpdateFromViewController:(id)arg1;
@property(readonly, nonatomic) _Bool isInSetupContext;
- (id)stateMachineConfigurationGetSetupAccessoryDescription:(id)arg1;
- (id)stateMachineConfigurationGetSetupCode:(id)arg1;
- (id)stateMachineConfigurationGetDiscoveredAccessory:(id)arg1;
- (long long)stateMachineConfigurationGetLaunchReason:(id)arg1;
- (_Bool)stateMachineConfigurationShouldJumpToDoneStep:(id)arg1;
- (_Bool)stateMachineConfigurationShouldSetupRouters:(id)arg1;
- (_Bool)stateMachineConfigurationShouldSetupBridgedAccessories:(id)arg1;
- (_Bool)stateMachineConfigurationShouldSkipDoneStep:(id)arg1;
- (_Bool)stateMachineConfigurationShouldSkipBridgeAddedStep:(id)arg1;
- (_Bool)stateMachineConfigurationShouldSkipResumeSelectAccessoryStep:(id)arg1;
- (_Bool)stateMachineConfigurationShouldSkipHomeHubStep:(id)arg1;
- (_Bool)stateMachineConfigurationShouldSkipDetectedStep:(id)arg1;
- (_Bool)stateMachineConfigurationActiveTupleIsTopTuple;
- (_Bool)stateMachineConfigurationIsLaunchedToSetupMultipleAccessories:(id)arg1;
- (_Bool)stateMachineConfigurationIsLaunchedToSetupSpecificAccessory:(id)arg1;
- (void)stateMachineConfiguration:(id)arg1 didUpdateHome:(id)arg2;
- (_Bool)stateMachineConfigurationIsUsingCHIPCommunicationProtocol:(id)arg1;
- (void)stateMachineConfigurationIsReadyToPair:(id)arg1;
@property(readonly, nonatomic) unsigned long long numberOfAccessoriesInSameCategory;
@property(readonly, nonatomic) _Bool isConfiguringLastAccessoryOfSameCategory;
@property(readonly, nonatomic) NSArray *allNetworkRouterProfiles;
@property(readonly, nonatomic) NSArray *allAccessories;
@property(readonly, nonatomic) NSArray *allAccessoryTuples;
- (id)_tupleForAccessory:(id)arg1;
- (id)_configurationForAccessory:(id)arg1 stateMachine:(id)arg2;
- (id)_bridgedConfigurationOrdinalityString;
@property(readonly, nonatomic) HSAccessoryTuple *nextUnconfiguredBridgedAccessory;
- (void)home:(id)arg1 didFailAccessorySetupWithError:(id)arg2;
- (void)dismissProxCardFlowAfterExecuting:(id)arg1;
- (id)nextViewControllerWithTarget:(id)arg1;
- (id)nextViewController;
- (id)_generateNextStepWithActiveTuple:(id)arg1;
- (id)_generateNextStep;
- (void)pairAccessory;
- (void)didReceiveAccessories:(id)arg1;
- (void)updateAccessoriesPendingConfiguration:(id)arg1;
@property(readonly, nonatomic) MTSDeviceSetupRequest *matterDeviceSetupRequest;
@property(readonly, nonatomic) long long launchReason;
@property(readonly, nonatomic) HMHome *home;
- (id)initWithHome:(id)arg1 accessories:(id)arg2 delegate:(id)arg3;
- (id)initWithHome:(id)arg1 accessoryDescription:(id)arg2 setupSpecificAccessory:(_Bool)arg3 entitlementContext:(id)arg4 discoveredAccessory:(id)arg5 delegate:(id)arg6;
@property(readonly, nonatomic) _Bool isUsingHAPCommunicationProtocol;
@property(readonly, nonatomic) _Bool isUsingCHIPCommunicationProtocol;
@property(readonly, nonatomic) _Bool isSetupInitiatedByPartnerCHIPEcosystem;
- (_Bool)requiresIdentifyButton:(id)arg1;
@property(readonly, nonatomic) _Bool requiresIdentifyButton;
- (_Bool)requiresDismissalConfirmation:(id)arg1;
@property(readonly, nonatomic) _Bool requiresDismissalConfirmation;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

