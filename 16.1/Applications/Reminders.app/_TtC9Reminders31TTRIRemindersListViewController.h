//
//     Generated by class-dump 3.5 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//
//  Build 2022-10-30 xybp888 Dump.
//  

#import <UIKit/UIViewController.h>

@class MISSING_TYPE, NSLayoutConstraint, UIToolbar, UIView;

@interface _TtC9Reminders31TTRIRemindersListViewController : UIViewController
{
    MISSING_TYPE *scrollViewDelegate;
    MISSING_TYPE *untypedTreeView;
    MISSING_TYPE *toolbar;
    MISSING_TYPE *toolbarBottomConstraint;
    MISSING_TYPE *tipContentView;
    MISSING_TYPE *keyboardAppearState;
    MISSING_TYPE *presenter;
    MISSING_TYPE *navigationItemOptions;
    MISSING_TYPE *listInfo;
    MISSING_TYPE *emptyListMessaging;
    MISSING_TYPE *focusedCell;
    MISSING_TYPE *pendingStartEditingItem;
    MISSING_TYPE *internalDeferredItemUpdates;
    MISSING_TYPE *itemsPendingUpdate;
    MISSING_TYPE *toolbarHeight;
    MISSING_TYPE *keyboardHeight;
    MISSING_TYPE *pencilInputAreaHeight;
    MISSING_TYPE *pendingLoadCellPromises;
    MISSING_TYPE *pendingDisplayCellPromises;
    MISSING_TYPE *toolbarController;
    MISSING_TYPE *chromelessToolbarUpdater;
    MISSING_TYPE *canMoveItemReturnValueTempOverrides;
    MISSING_TYPE *lastSetLargeTitleColor;
    MISSING_TYPE *contentScrollViewNeedsAdjustmentAfterScrollingAnimation;
    MISSING_TYPE *currentMultipleSelectionInteractionSession;
    MISSING_TYPE *listMessagingView;
    MISSING_TYPE *feedbackGenerator;
    MISSING_TYPE *pencilAutoCommitTracker;
    MISSING_TYPE *currentTextInputModeObserver;
    MISSING_TYPE *currentTextInputModeCancellable;
    MISSING_TYPE *treeViewDidEndScrollingAnimationPassthroughSubject;
    MISSING_TYPE *treeViewDidScrollPassthroughSubject;
    MISSING_TYPE *treeViewDidStopScrollingCancellable;
    MISSING_TYPE *currentScrollWithCompensationSession;
    MISSING_TYPE *firstVisibleItemToRestore;
    MISSING_TYPE *treeViewHasSwipedItem;
    MISSING_TYPE *swHighlightToShowInNavBar;
    MISSING_TYPE *contextMenuOriginatorItem;
    MISSING_TYPE *$__lazy_storage_$_completedTasksRotor;
    MISSING_TYPE *$__lazy_storage_$_incompleteTasksRotor;
    MISSING_TYPE *$__lazy_storage_$_overdueTasksRotor;
}

- (void).cxx_destruct;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)keyboardWillChangeFrameNotificationWithNotification:(id)arg1;
- (void)keyboardDidHideNotificationWithNotification:(id)arg1;
- (void)keyboardWillHideNotificationWithNotification:(id)arg1;
- (void)keyboardDidShowNotificationWithNotification:(id)arg1;
- (MISSING_TYPE *)keyboardWillShowNotificationWithNotification: /* Error: Ran out of types for this method. */;
- (void)willAddDeactivationReasonWithNotification:(id)arg1;
- (void)toggleShowCompletedAction:(id)arg1;
- (void)printListAction:(id)arg1;
- (void)postponeAllOverdueToTodayAction:(id)arg1;
- (void)setReminderDueDateToNoneAction:(id)arg1;
- (void)setReminderDueDateToNextWeekAction:(id)arg1;
- (void)setReminderDueDateToWeekendAction:(id)arg1;
- (void)setReminderDueDateToTomorrowAction:(id)arg1;
- (void)setReminderDueDateToTodayAction:(id)arg1;
- (void)addStructuredHashtagForSelectedReminderAction:(id)arg1;
- (void)toggleFlaggedForSelectedReminderAction:(id)arg1;
- (void)outdentSelectedReminderAction:(id)arg1;
- (void)indentSelectedReminderAction:(id)arg1;
- (void)toggleReminderCompletionStateAction:(id)arg1;
- (void)showReminderInfoAction:(id)arg1;
- (void)collapseAllItemsAction:(id)arg1;
- (void)expandAllItemsAction:(id)arg1;
- (void)newReminderAction:(id)arg1;
- (void)deleteReminderAction:(id)arg1;
- (void)expandReminderSubtasksAction:(id)arg1;
- (void)collapseReminderSubtasksAction:(id)arg1;
- (void)endEditingReminderAction:(id)arg1;
@property(nonatomic) __weak NSLayoutConstraint *toolbarBottomConstraint; // @synthesize toolbarBottomConstraint;
@property(nonatomic) __weak UIToolbar *toolbar; // @synthesize toolbar;
@property(nonatomic) __weak UIView *untypedTreeView; // @synthesize untypedTreeView;
- (void)didUpdateFocusInContext:(id)arg1 withAnimationCoordinator:(id)arg2;
- (void)validateCommand:(id)arg1;
- (void)paste:(id)arg1;
- (void)copy:(id)arg1;
- (void)cut:(id)arg1;
- (_Bool)canPerformAction:(SEL)arg1 withSender:(id)arg2;
- (void)setEditing:(_Bool)arg1 animated:(_Bool)arg2;
- (void)updateUserActivityState:(id)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLayoutSubviews;
- (void)viewWillLayoutSubviews;
- (void)viewDidLoad;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;

@end

