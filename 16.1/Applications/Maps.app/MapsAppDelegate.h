//
//     Generated by class-dump 3.5 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//
//  Build 2022-10-30 xybp888 Dump.
//  

#import <UIKit/UIResponder.h>

@class AppCoordinator, ApplicationSessionController, BKSProcessAssertion, CarDisplayController, DataActivationPopupAssertion, FavoritesSpotlightIndexingClient, FeedbackSubmissionManager, ForegroundOnlyDataActivationPopupAssertion, IOSChromeViewController, IPCLoadDirectionsMessage, IdleTimerController, MISSING_TYPE, MSPCloudSynchronizer, MUPlaceholderGridCache, MapsDistanceUnitUpdater, MapsSyncDataMigrator, NSArray, NSString, NavigationIdleTimerProvider, NavigationThermalWarningController, POISearchManager, PlatformController, SBSSecureAppAssertion, SBSStatusBarStyleOverridesAssertion, SiriNavStatusUpdater, UGCAppKitPreferencesPrivacyController, UIWindow;

@interface MapsAppDelegate : UIResponder
{
    int _navNotifyToken;
    _Bool _hasNavNotifyToken;
    _Bool _isNavigatingTurnByTurn;
    _Bool _isTrackingLocation;
    _Bool _isShowingTour;
    _Bool _carNavigationWasVisible;
    _Bool _canShowInLockscreen;
    _Bool _didSkipInitialUIKitBuildMenuCall;
    DataActivationPopupAssertion *_navigatorDataActivationPopupAssertion;
    ForegroundOnlyDataActivationPopupAssertion *_foregroundDataActivationPopupAssertion;
    POISearchManager *_poiSearchManager;
    FavoritesSpotlightIndexingClient *_favoritesSpotlightIndexingClient;
    MSPCloudSynchronizer *_cloudSynchronizer;
    MapsSyncDataMigrator *_syncMigrator;
    CarDisplayController *_carDisplayController;
    MUPlaceholderGridCache *_placeholderGridCache;
    UGCAppKitPreferencesPrivacyController *_ugcPrivacyController;
    IPCLoadDirectionsMessage *_lastPrepareNavigationMessage;
    NavigationIdleTimerProvider *_navigationIdleTimerProvider;
    NavigationIdleTimerProvider *_transitIdleTimerProvider;
    NavigationThermalWarningController *_thermalWarningController;
    SBSStatusBarStyleOverridesAssertion *_doubleHeightStatusBarAssertion;
    SBSSecureAppAssertion *_secureAppAssertion;
    FeedbackSubmissionManager *_submissionManager;
    _Bool _coreRoutineEnabled;
    unsigned long long _lockedOrientations;
    BKSProcessAssertion *_priorityAssertion;
    SiriNavStatusUpdater *_siriNavStatusUpdater;
    MapsDistanceUnitUpdater *_distanceUnitUpdater;
    IdleTimerController *_idleTimerController;
    ApplicationSessionController *_appSessionController;
}

+ (_Bool)mapsIsLaunchedForTesting;
+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
- (void).cxx_destruct;
@property(retain, nonatomic) ApplicationSessionController *appSessionController; // @synthesize appSessionController=_appSessionController;
@property(retain, nonatomic) IdleTimerController *idleTimerController; // @synthesize idleTimerController=_idleTimerController;
@property(retain, nonatomic) MapsDistanceUnitUpdater *distanceUnitUpdater; // @synthesize distanceUnitUpdater=_distanceUnitUpdater;
@property(retain, nonatomic) SiriNavStatusUpdater *siriNavStatusUpdater; // @synthesize siriNavStatusUpdater=_siriNavStatusUpdater;
@property(retain, nonatomic) BKSProcessAssertion *priorityAssertion; // @synthesize priorityAssertion=_priorityAssertion;
@property(readonly, nonatomic) MSPCloudSynchronizer *cloudSynchronizer; // @synthesize cloudSynchronizer=_cloudSynchronizer;
@property(readonly, nonatomic) FavoritesSpotlightIndexingClient *favoritesSpotlightIndexingClient; // @synthesize favoritesSpotlightIndexingClient=_favoritesSpotlightIndexingClient;
@property(readonly, nonatomic, getter=isCoreRoutineEnabled) _Bool coreRoutineEnabled; // @synthesize coreRoutineEnabled=_coreRoutineEnabled;
@property(nonatomic) unsigned long long lockedOrientations; // @synthesize lockedOrientations=_lockedOrientations;
- (id)photoAttributionPreferencesManager;
- (_Bool)useLargeLabelsPreferenceForAppkitBundle;
- (void)appkitBundleSetUseLargeLabels:(_Bool)arg1;
- (void)presentRatingsAndPhotosPrivacyScreen;
- (void)notificationButtonPressedWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)fetchNotificationAuthUndetermined:(CDUnknownBlockType)arg1;
- (void)preferencesPrivacyControllerDidDismiss:(id)arg1;
- (void)presentMacARPPreferences;
- (void)presentMacRoutePlannerPreferences;
- (void)presentMacGeneralPreferences;
- (void)presentPreferences;
- (void)presentMacPreferencesTabWithType:(long long)arg1;
- (id)loadAppKitBundle;
- (Class)appKitBundleClass;
- (void)buildMenuWithBuilder:(id)arg1;
- (id)testCoordinator;
- (id)mainVKMapView;
- (id)sceneDelegateForTesting;
- (id)visibleMapViewFromCarPlay;
@property(readonly, nonatomic) NSArray *allVisibleMapViewsButNotCarPlay;
@property(readonly, nonatomic) NSArray *allVisibleMapViews;
- (void)presentViewController:(id)arg1 animated:(_Bool)arg2;
- (void)userNotificationCenter:(id)arg1 willPresentNotification:(id)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;
- (void)endBackgroundNavigation;
- (MISSING_TYPE *)updateWithGuidance: /* Error: Ran out of types for this method. */;
- (void)startPreparedBackgroundNavigationWithMessage:(id)arg1;
- (void)prepareBackgroundNavigationWithMessage:(id)arg1;
- (void)navigationService:(id)arg1 didFailWithError:(id)arg2;
- (void)navigationServiceWillResumeFromPause:(id)arg1;
- (void)navigationServiceWillPause:(id)arg1;
- (void)navigationService:(id)arg1 didEnableGuidancePrompts:(_Bool)arg2;
- (void)navigationService:(id)arg1 didResumeNavigatingFromWaypoint:(id)arg2 endOfLegIndex:(unsigned long long)arg3 reason:(unsigned long long)arg4;
- (void)navigationService:(id)arg1 didArriveAtWaypoint:(id)arg2 endOfLegIndex:(unsigned long long)arg3;
- (void)navigationService:(id)arg1 didChangeFromState:(unsigned long long)arg2 toState:(unsigned long long)arg3;
- (void)navigationService:(id)arg1 willChangeFromState:(unsigned long long)arg2 toState:(unsigned long long)arg3;
- (_Bool)_supportsModernTransitNavigation:(id)arg1;
- (void)_releaseProcessAssertion;
- (void)_acquireProcessAssertionForTurnByTurn:(_Bool)arg1;
- (void)chromeViewController:(id)arg1 didMoveFromContextStack:(id)arg2 toContextStack:(id)arg3;
- (void)chromeViewController:(id)arg1 willMoveFromContextStack:(id)arg2 toContextStack:(id)arg3;
- (void)endTurnByTurn:(id)arg1;
- (void)endTransitTurnByTurn;
- (void)startTurnByTurn:(id)arg1;
- (void)startTransitTurnByTurn;
@property(readonly, nonatomic) _Bool canPlayTrace;
- (void)_releaseSecureAppAssertion;
- (void)_acquireSecureAppAssertion;
- (void)_updateSecureAppAssertion;
- (void)_setCanShowInLockscreen:(_Bool)arg1;
- (void)acquireSecureAppAssertionIfNeeded;
- (void)updateNavigationIdleTimerConfiguration;
- (void)setMapsIsShowingTour:(_Bool)arg1;
- (void)setTrackingMode:(long long)arg1 monitorBatteryState:(_Bool)arg2;
- (void)_clearDoubleHeightStatusBar;
- (void)_acquireDoubleHeightStatusBarAssertionIfNeeded;
- (void)_unsuppressNetworkFlagsIfNecessary;
- (void)_unsuppressNetworkFlags;
- (void)_suppressNetworkFlags;
- (void)carDisplayControllerDidInvalidateNavigationVisibility:(id)arg1;
- (void)prepareForCarPlayLaunch;
- (void)_localeDidChange:(id)arg1;
- (void)migrateARPConsentDefaults:(id)arg1;
- (void)migrateNavigoDefaults:(id)arg1;
- (void)_userDefaultsDidChange:(id)arg1;
- (void)_registerDefaults;
- (_Bool)applicationCanPromptToCalibrateHeading:(id)arg1;
- (void)applicationDidRemoveDeactivationReason:(id)arg1;
- (void)applicationWillAddDeactivationReason:(id)arg1;
- (void)_maps_applicationDidEnterBackground:(id)arg1;
- (void)_maps_applicationWillEnterForeground:(id)arg1;
- (void)_maps_applicationWillResignActive:(id)arg1;
- (void)_maps_applicationDidBecomeActive:(id)arg1;
- (void)application:(id)arg1 didReceiveRemoteNotification:(id)arg2 fetchCompletionHandler:(CDUnknownBlockType)arg3;
- (void)application:(id)arg1 didFailToRegisterForRemoteNotificationsWithError:(id)arg2;
- (void)application:(id)arg1 didRegisterForRemoteNotificationsWithDeviceToken:(id)arg2;
- (unsigned long long)application:(id)arg1 supportedInterfaceOrientationsForWindow:(id)arg2;
- (id)application:(id)arg1 configurationForConnectingSceneSession:(id)arg2 options:(id)arg3;
- (void)applicationDidReceiveMemoryWarning:(id)arg1;
- (void)applicationWillTerminate:(id)arg1;
- (_Bool)application:(id)arg1 didFinishLaunchingWithOptions:(id)arg2;
- (_Bool)application:(id)arg1 willFinishLaunchingWithOptions:(id)arg2;
- (void)application:(id)arg1 handleEventsForBackgroundURLSession:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)_performPostExtendedLaunchInitialization;
- (void)receivedFullyDrawnNotification;
- (void)sendDidEnterBackgroundNotification;
@property(readonly, nonatomic) double timeIntervalSinceLastBackgrounded;
- (void)checkCoreRoutineEnabledState;
- (void)_setupSharedLocationManager;
- (void)_startSyncIfNeededAllowingHistorySyncStartDuringTesting:(_Bool)arg1;
@property(readonly, nonatomic) POISearchManager *poiSearchManager;
- (id)entryPointsCoordinator;
@property(readonly, nonatomic) IOSChromeViewController *chromeViewController;
@property(readonly, nonatomic) AppCoordinator *appCoordinator;
@property(readonly, nonatomic) PlatformController *platformController;
- (void)dealloc;
@property(readonly, nonatomic) FeedbackSubmissionManager *submissionManager;
- (void)createSubmissionManagerIfNeeded;
- (void)showNavigationAdvisoryIfNeeded;
- (void)promptPreciseLocationOff;
- (void)promptLocationServicesOff;
- (void)_presentLocationServicesAlertController:(id)arg1;
- (void)_cleanupAfterLocationServicesAlertController;
- (void)_locationManagerApprovalDidChange:(id)arg1;
- (void)promptLocationServicesAuthorizationWithHandler:(CDUnknownBlockType)arg1 forceAlways:(_Bool)arg2;
- (void)promptLocationServicesAuthorizationWithHandler:(CDUnknownBlockType)arg1;
- (void)showLocationServicesAlertWithError:(id)arg1;
- (void)interruptApplicationWithKind:(long long)arg1 userInfo:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (_Bool)dismissCurrentInterruptionOfKind:(long long)arg1;
- (void)dismissCurrentInterruption;
@property(readonly, nonatomic) long long currentInterruptionKind;
- (void)_locationAuthorizationDismissed:(id)arg1;
- (void)_setShowingLocationServicesAuthorizationPrompt:(_Bool)arg1;
- (_Bool)_isShowingLocationServicesAuthorizationPrompt;
- (void)_setCurrentInterruptionHandle:(id)arg1;
- (id)_currentInterruptionHandle;
- (void)addAttachmentsPathToComposer:(id)arg1;
- (void)presentRadarComposerIfPossibleInViewController:(id)arg1 showingTracePicker:(_Bool)arg2 traceFilePath:(id)arg3 radarTitle:(id)arg4 radarDescription:(id)arg5 classification:(unsigned long long)arg6 component:(unsigned long long)arg7;
- (void)presentRadarComposerIfPossibleInViewController:(id)arg1 showingTracePicker:(_Bool)arg2 traceFilePath:(id)arg3;
- (void)presentRadarComposerIfPossibleInViewController:(id)arg1 reason:(id)arg2 radarTitle:(id)arg3 radarDescription:(id)arg4 shouldPrompt:(_Bool)arg5 classification:(unsigned long long)arg6 component:(unsigned long long)arg7;
- (void)presentRadarComposerIfPossibleInViewController:(id)arg1 reason:(id)arg2 radarTitle:(id)arg3 classification:(unsigned long long)arg4 component:(unsigned long long)arg5;
- (void)presentRadarComposerIfPossibleInViewController:(id)arg1;
- (_Bool)createCurrentStateSnapshotAndReturnSnapshotDirectoryURL:(out id *)arg1 tileStateReportURLs:(out id *)arg2 screenshotImageURLs:(out id *)arg3 debugTreeURLs:(out id *)arg4 mapsActivityDataPath:(out id *)arg5 error:(out id *)arg6;
- (_Bool)_isMainScreenMapView:(id)arg1;
- (_Bool)_isCarPlayMapView:(id)arg1;
- (void)presentAddAMissingPlaceWith:(id)arg1;
- (void)newScene;
- (void)requestNewWindow:(id)arg1;
- (void)requestNewTab:(id)arg1;
- (void)presentRadar;
- (void)sendToDeviceWithID:(id)arg1;
- (void)toggleDisableMenuSharing;
- (void)toggleScrollingOpensPlacecard;
- (void)toggleSidebarSelection;
- (void)presentAddAMissingPlace;
- (void)presentRAP;
- (_Bool)application:(id)arg1 runTest:(id)arg2 options:(id)arg3;
- (id)currentTest;
- (void)setCurrentTest:(id)arg1;
- (void)doPostLaunchTestSetup;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(retain, nonatomic) UIWindow *window;

@end

