//
//     Generated by class-dump 3.5 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//
//  Build 2022-10-30 xybp888 Dump.
//  

@class CarAccessoriesOverlay, CarAlertViewController, CarCardsOverlay, CarFocusContainerGuideController, CarFocusOrderEnvironment, CarFocusOrderItem, CarMapControlsOverlay, CarMapNudgerizer, CarMapSettings, CarNavigationDisplay, CarRouteGeniusAnnotationsManager, CarRouteSelectionController, CustomPOIsController, GEOMapServiceTraits, InterruptionManager, MISSING_TYPE, MapViewResponder, NSArray, NSLayoutConstraint, NSMapTable, NSMutableArray, NSPointerArray, NSString, NSTimer, PersonalizedItemManager, UILayoutGuide, UITapGestureRecognizer, UIView;
@protocol CarChromeContext, NSObject, UIFocusEnvironment, UIFocusItemContainer;

@interface CarChromeViewController
{
    NSTimer *_autohideIdleTimer;
    UITapGestureRecognizer *_autohideTapRecognizer;
    UITapGestureRecognizer *_doubleTapRecognizer;
    id <NSObject> _autohidePresenceObserverToken;
    NSPointerArray *_autohideOverrideTokenStack;
    NSMapTable *_autohideOverrideTokensToBehavior;
    NSTimer *_navigationObscuredTimeout;
    _Bool _isCurrentlyVisible;
    _Bool _mapViewRegionIsChanging;
    _Bool _configuringMapView;
    CarAlertViewController *_currentAlertViewController;
    NSMutableArray *_alertDismissalBlocks;
    PersonalizedItemManager *_personalizedItemManager;
    CustomPOIsController *_customPOIsController;
    id <CarChromeContext> _restoreFocusForContext;
    _Bool _ownsFocus;
    CarFocusContainerGuideController *_focusContainerGuideController;
    InterruptionManager *_interruptionManager;
    NSLayoutConstraint *_headingUpMapInsetAdjustmentConstraint;
    _Bool _runningNavigation;
    _Bool _haveVehicleDirection;
    long long _sceneType;
    CarNavigationDisplay *_navigationDisplay;
    UILayoutGuide *_notificationLayoutGuide;
    CarCardsOverlay *_cardsOverlay;
    CarAccessoriesOverlay *_accessoriesOverlay;
    CarMapControlsOverlay *_mapControlsOverlay;
    CarMapSettings *_defaultMapSettings;
    CarRouteGeniusAnnotationsManager *_routeGeniusAnnotationsManager;
    CarMapNudgerizer *_nudgerizer;
    MapViewResponder *_mapViewResponder;
    CarRouteSelectionController *_routeSelectionController;
    UITapGestureRecognizer *_backButtonRecognizer;
    CDUnknownBlockType _doubleTapBlock;
    NSMapTable *_chromeItemsByContext;
    NSMapTable *_lastFocusedIdentifiersByContext;
    NSMapTable *_lastFocusedItemsByContext;
}

+ (void)_updateAllowOneHandedZooming;
+ (_Bool)allowOneHandedZooming;
+ (Class)userLocationViewClass;
+ (id)localizedLocationAuthorizationMessage;
+ (id)localizedLocationAuthorizationTitle;
+ (void)initialize;
- (void).cxx_destruct;
@property(retain, nonatomic) NSMapTable *lastFocusedItemsByContext; // @synthesize lastFocusedItemsByContext=_lastFocusedItemsByContext;
@property(retain, nonatomic) NSMapTable *lastFocusedIdentifiersByContext; // @synthesize lastFocusedIdentifiersByContext=_lastFocusedIdentifiersByContext;
@property(retain, nonatomic) NSMapTable *chromeItemsByContext; // @synthesize chromeItemsByContext=_chromeItemsByContext;
@property(copy, nonatomic) CDUnknownBlockType doubleTapBlock; // @synthesize doubleTapBlock=_doubleTapBlock;
@property(retain, nonatomic) UITapGestureRecognizer *backButtonRecognizer; // @synthesize backButtonRecognizer=_backButtonRecognizer;
@property(retain, nonatomic) CarRouteSelectionController *routeSelectionController; // @synthesize routeSelectionController=_routeSelectionController;
@property(retain, nonatomic) MapViewResponder *mapViewResponder; // @synthesize mapViewResponder=_mapViewResponder;
@property(retain, nonatomic) CarMapNudgerizer *nudgerizer; // @synthesize nudgerizer=_nudgerizer;
@property(retain, nonatomic) CarRouteGeniusAnnotationsManager *routeGeniusAnnotationsManager; // @synthesize routeGeniusAnnotationsManager=_routeGeniusAnnotationsManager;
@property(nonatomic) _Bool haveVehicleDirection; // @synthesize haveVehicleDirection=_haveVehicleDirection;
@property(retain, nonatomic) CarMapSettings *defaultMapSettings; // @synthesize defaultMapSettings=_defaultMapSettings;
@property(retain, nonatomic) CarMapControlsOverlay *mapControlsOverlay; // @synthesize mapControlsOverlay=_mapControlsOverlay;
@property(retain, nonatomic) CarAccessoriesOverlay *accessoriesOverlay; // @synthesize accessoriesOverlay=_accessoriesOverlay;
@property(retain, nonatomic) CarCardsOverlay *cardsOverlay; // @synthesize cardsOverlay=_cardsOverlay;
@property(retain, nonatomic) UILayoutGuide *notificationLayoutGuide; // @synthesize notificationLayoutGuide=_notificationLayoutGuide;
@property(nonatomic, getter=isRunningNavigation) _Bool runningNavigation; // @synthesize runningNavigation=_runningNavigation;
@property(retain, nonatomic) CarNavigationDisplay *navigationDisplay; // @synthesize navigationDisplay=_navigationDisplay;
@property(readonly, nonatomic) long long sceneType; // @synthesize sceneType=_sceneType;
- (void)updateMapViewFrameRate;
- (_Bool)isEligibleForMapViewFrameRateLimiting;
- (CDStruct_8ce276cf)lowPowerModeRateLimitEnabledConfigKey;
- (CDStruct_8ce276cf)batteryLevelRateLimitEnabledConfigKey;
- (CDStruct_8ce276cf)thermalRateLimitsConfigKey;
- (void)searchPinsManager:(id)arg1 displayPlaceCardForResult:(id)arg2;
- (void)_handleBackButton;
- (void)_handleBackButtonPressed:(id)arg1;
- (id)_previousContext;
- (void)updateHardwareBackButtonBehavior;
- (void)setHardwareBackButtonBehavior:(long long)arg1 forContext:(id)arg2;
- (void)decrementForToken:(id)arg1 groupName:(id)arg2;
- (void)incrementForToken:(id)arg1 groupName:(id)arg2;
- (long long)forcedAutohideBehavior;
@property(readonly, nonatomic) _Bool isForcingAutohideBehavior;
- (void)clearAllForcedAutohideBehavior;
- (MISSING_TYPE *)_endForcingAutohideBehaviorWithToken: /* Error: Ran out of types for this method. */;
- (void)_beginForcingAutohideBehavior:(long long)arg1 withToken:(id)arg2;
- (void)_removeAutohideGestureRecognizer;
- (_Bool)gestureRecognizer:(id)arg1 shouldRequireFailureOfGestureRecognizer:(id)arg2;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (void)_addAutohideGestureRecognizer;
- (void)_stopAutohideIdleTimer;
- (void)_restartAutohideIdleTimer;
- (void)restartAutohideIdleTimerIfStarted;
- (void)_startAutohideIdleTimerIfStopped;
- (_Bool)_areAccessoriesHiddenForContext:(id)arg1;
- (_Bool)_areAccessoriesHiddenForCurrentContext;
- (_Bool)isAutohidingContentHiddenForContext:(id)arg1;
@property(nonatomic, getter=isAutohidingContentHiddenForCurrentContext) _Bool autohidingContentHiddenForCurrentContext;
- (void)interruptAutohideForIncidentalInteraction;
- (void)_humanPresenceDidChange;
- (void)_autohideGestureRecognizerDetectedTap:(id)arg1;
- (void)_autohideBecameIdle;
- (void)_updateAutohideBehavior;
- (void)_setAutohideBehavior:(long long)arg1 forContext:(id)arg2;
- (long long)_autohidingBehaviorForContext:(id)arg1;
- (void)_recordAutohidingContentIsHidden:(_Bool)arg1 forContext:(id)arg2;
- (_Bool)_autohidingContentIsHiddenForContext:(id)arg1;
- (void)_requestAutohideBehaviorForContext:(id)arg1;
- (void)setNeedsAutohideBehaviorUpdateForContext:(id)arg1;
- (void)carCardView:(id)arg1 didChangeFocus:(_Bool)arg2;
- (void)carCardView:(id)arg1 chevronButtonSelected:(id)arg2;
- (void)carCardViewCloseButtonTapped:(id)arg1;
- (void)_reloadCardsAnimated:(_Bool)arg1;
- (void)_updateCardsForContext:(id)arg1 withAnimation:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)updateCardsForContext:(id)arg1 animated:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)updateCardsForContext:(id)arg1 animated:(_Bool)arg2;
- (id)_desiredCards;
- (_Bool)canShowCards;
- (void)captureUserActionSelectedSearchCategory:(id)arg1 categoriesDisplayed:(id)arg2;
- (void)captureUserActionPannedInDirection:(long long)arg1;
- (void)captureUserActionChangedTrackingMode:(long long)arg1;
- (void)captureUserAction:(int)arg1 selectedRouteIndex:(int)arg2;
- (void)captureUserAction:(int)arg1 mapItem:(id)arg2 atResultIndex:(int)arg3;
- (void)captureUserAction:(int)arg1 mapItem:(id)arg2;
- (void)captureUserAction:(int)arg1 eventValue:(id)arg2;
- (void)captureUserAction:(int)arg1;
- (void)captureUserAction:(int)arg1 onTarget:(int)arg2 eventValue:(id)arg3;
- (void)captureUserAction:(int)arg1 onTarget:(int)arg2;
- (void)_captureUserActionBackToContext:(id)arg1;
- (int)_currentUsageTarget;
- (id)_userActionDetailsWithMapItem:(id)arg1 resultIndex:(int)arg2;
- (void)_enableZoomGesture:(_Bool)arg1;
- (void)updateZoomControls;
- (void)_updateRouteSelectionController;
- (void)_updateNudgerizer;
- (void)_updateCameraToggleButton;
- (void)_update3DButton;
- (void)_reportIncidentPressed;
- (void)_toggleCameraPressed;
- (void)_toggle3DButtonPressed;
- (void)zoomOut;
- (void)zoomOutButtonPressed;
- (void)zoomIn;
- (void)zoomInButtonPressed;
- (void)panButtonPressed;
- (void)_navRecenterButtonPressed;
- (void)carMapControls:(id)arg1 didTriggerAction:(unsigned long long)arg2;
- (void)_reloadMapControlsInsetsForContext:(id)arg1;
- (void)_reloadMapControlsForContext:(id)arg1 withAnimation:(id)arg2;
- (void)_updateAudioControls;
- (void)_reloadAccessoriesInsetsForContext:(id)arg1;
- (void)_reloadAccessoriesForContext:(id)arg1 withAnimation:(id)arg2;
- (void)reloadAccessoriesForContext:(id)arg1 animated:(_Bool)arg2;
- (void)configureAccessoriesOverlay:(id)arg1 forContext:(id)arg2;
- (void)_reloadFocusContainerGuidesForContext:(id)arg1;
@property(readonly, copy, nonatomic, getter=_linearFocusMovementSequences) NSArray *linearFocusMovementSequences;
@property(readonly, copy, nonatomic) NSArray *preferredFocusEnvironments;
- (_Bool)shouldUpdateFocusInContext:(id)arg1;
- (_Bool)_isFocusMovementValidInContext:(id)arg1;
- (void)setOwnsFocus:(_Bool)arg1;
- (void)_preserveFocusedItemFromContext:(id)arg1 toContext:(id)arg2;
@property(readonly, nonatomic) CarFocusOrderEnvironment *environmentRepresentingAlternateRoutes;
@property(readonly, nonatomic) CarFocusOrderEnvironment *environmentRepresentingOverlays;
@property(readonly, nonatomic) CarFocusOrderEnvironment *environmentRepresentingMapControls;
@property(readonly, nonatomic) CarFocusOrderItem *itemRepresentingAlternateRoutes;
@property(readonly, nonatomic) CarFocusOrderItem *itemRepresentingOverlays;
@property(readonly, nonatomic) CarFocusOrderItem *itemRepresentingMapControls;
@property(readonly, nonatomic) id visuallySelectedItem;
@property(readonly, nonatomic) _Bool suppressIdleFocus;
- (void)pressesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)pressesEnded:(id)arg1 withEvent:(id)arg2;
- (void)pressesChanged:(id)arg1 withEvent:(id)arg2;
- (void)pressesBegan:(id)arg1 withEvent:(id)arg2;
- (_Bool)_nudgeHandlesPress:(id)arg1;
@property(readonly, nonatomic) _Bool _shouldAllowKnobFocusMovement;
- (void)setNeedsFocusUpdateIfUnfocused;
- (void)disableDoubleTapRecognizer;
- (void)enableDoubleTapRecognizerWithBlock:(CDUnknownBlockType)arg1;
- (void)_handleDoubleTap:(id)arg1;
- (void)_carOneHandedZoomSettingUpdated:(id)arg1;
- (_Bool)_canSelectAlternateRoutes;
- (void)_navigationObscuredTimeoutFired:(id)arg1;
- (void)_stopNavigationObscuredTimeout;
- (void)_restartNavigationObscuredTimeout;
- (void)_startNavigationObscuredTimeout;
- (void)_startNavigationDisplayAnimated:(_Bool)arg1;
- (void)stopRunningNavigationAnimated:(_Bool)arg1;
- (void)startRunningNavigationAnimated:(_Bool)arg1;
@property(readonly, nonatomic) long long modernMapProjectionType;
@property(readonly, nonatomic) long long modernMapTerrainMode;
@property(readonly, nonatomic) _Bool shouldUseModernMap;
@property(readonly, nonatomic) GEOMapServiceTraits *navigationAwareTraits;
- (void)_locationAuthorizationDidChange:(id)arg1;
- (void)mapView:(id)arg1 didChangeUserTrackingMode:(long long)arg2 animated:(_Bool)arg3 fromTrackingButton:(_Bool)arg4;
- (void)mapViewNavigationCameraHasStoppedPanning:(id)arg1;
- (void)mapViewNavigationCameraHasStartedPanning:(id)arg1;
- (void)mapViewDidFinishRenderingMap:(id)arg1 fullyRendered:(_Bool)arg2;
- (id)mapView:(id)arg1 viewForAnnotation:(id)arg2;
- (void)mapView:(id)arg1 canEnter3DModeDidChange:(_Bool)arg2;
- (void)mapView:(id)arg1 didBecomePitched:(_Bool)arg2;
- (void)mapView:(id)arg1 didStopRespondingToGesture:(long long)arg2 zoomDirection:(long long)arg3 zoomGestureType:(long long)arg4 didDecelerate:(_Bool)arg5 tiltDirection:(long long)arg6;
- (void)mapView:(id)arg1 canZoomOutDidChange:(_Bool)arg2;
- (void)mapView:(id)arg1 canZoomInDidChange:(_Bool)arg2;
- (void)mapView:(id)arg1 regionDidChangeAnimated:(_Bool)arg2;
- (void)mapView:(id)arg1 didDeselectLabelMarker:(id)arg2;
- (void)mapView:(id)arg1 didSelectLabelMarker:(id)arg2;
- (_Bool)mapView:(id)arg1 shouldSelectLabelMarker:(id)arg2;
- (void)mapView:(id)arg1 didFailToLocateUserWithError:(id)arg2;
- (void)mapView:(id)arg1 didUpdateUserLocation:(id)arg2;
- (_Bool)shouldRecenterAndZoom;
- (void)mapSettings:(id)arg1 didApplyAnimated:(_Bool)arg2;
- (void)mapSettings:(id)arg1 willApplyAnimated:(_Bool)arg2;
- (double)mapInsetsUpdateAnimationDuration;
- (_Bool)mapSettings:(id)arg1 shouldApplyAnimated:(_Bool *)arg2;
- (void)updateComponent:(id)arg1 withAnimation:(id)arg2;
- (id)allComponents;
- (_Bool)shouldAnimateMapTransition:(_Bool)arg1;
- (void)prepareMapViewForFirstUse;
- (void)_resetMapViewDefaults:(id)arg1;
- (id)mapViewDelegateForSelector:(SEL)arg1;
- (void)_performMapUpdateToUserInterfaceStyle:(long long)arg1 animation:(id)arg2;
- (void)_updateMapUserInterfaceStyle:(long long)arg1 animated:(_Bool)arg2;
- (void)_updateMapToCurrentUserInterfaceStyleAnimated:(_Bool)arg1;
- (void)lightLevelController:(id)arg1 didUpdateLightLevel:(long long)arg2;
- (void)_carPlayWindowMapStyleDidChange:(id)arg1;
- (void)traitCollectionDidChange:(id)arg1;
- (void)_presentAnyPendingAlert:(_Bool)arg1;
- (void)_dismissAlertViewController:(id)arg1 animated:(_Bool)arg2;
- (void)_presentAlertViewController:(id)arg1 animated:(_Bool)arg2;
- (CDUnknownBlockType)_presentSearchRefinementWithUserInfo:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (CDUnknownBlockType)presentInterruptionOfKind:(long long)arg1 userInfo:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (_Bool)dismissCurrentInterruptionOfKind:(long long)arg1;
- (void)dismissInterruption;
- (void)_carExternalDeviceStateUpdated:(id)arg1;
- (id)chromeViewItemForContext:(id)arg1 createIfNeeded:(_Bool)arg2;
@property(readonly, nonatomic) id <CarChromeContext> topContext;
- (void)contextStackDidUpdateFrom:(id)arg1 to:(id)arg2 withAnimation:(id)arg3;
- (void)contextStackWillUpdateFrom:(id)arg1 to:(id)arg2 withAnimation:(id)arg3;
- (_Bool)_shouldAccessoriesModifyMapInsetsForContext:(id)arg1;
- (void)viewDidLayoutSubviews;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (id)mapReplacementColor;
- (void)loadView;
@property(readonly, nonatomic) CarMapSettings *transientMapSettings;
- (id)createMapReplacementView;
- (void)setInactive:(_Bool)arg1;
- (void)didUnsuppress;
- (void)didSuppress;
- (id)currentTraits;
- (id)initWithSceneType:(long long)arg1;
- (void)dealloc;

// Remaining properties
@property(nonatomic) _Bool areChildrenFocused;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly, nonatomic, getter=_isEligibleForFocusInteraction) _Bool eligibleForFocusInteraction;
@property(readonly, nonatomic, getter=_isEligibleForFocusOcclusion) _Bool eligibleForFocusOcclusion;
@property(readonly, copy, nonatomic) NSString *focusGroupIdentifier;
@property(readonly, nonatomic) id <UIFocusItemContainer> focusItemContainer;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) __weak id <UIFocusEnvironment> parentFocusEnvironment;
@property(readonly, nonatomic) UIView *passThroughView;
@property(readonly, nonatomic, getter=_preferredFocusMovementStyle) long long preferredFocusMovementStyle;
@property(readonly, nonatomic) __weak UIView *preferredFocusedView;
@property(readonly) Class superclass;

@end

