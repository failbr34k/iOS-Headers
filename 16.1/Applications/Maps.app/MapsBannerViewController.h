//
//     Generated by class-dump 3.5 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//
//  Build 2022-10-30 xybp888 Dump.
//  

#import <UIKit/UIViewController.h>

@class BNBannerSource, BSAction, GCDTimer, NSArray, NSLayoutConstraint, NSString, NSURL, UIColor, UITapGestureRecognizer, UIView;
@protocol BNPresentableContext, BannerView, MapsBannerViewControllerDelegate, SBUISystemApertureAccessoryView, SBUISystemApertureAutomaticallyInvalidatable;

@interface MapsBannerViewController : UIViewController
{
    _Bool _aperturePresentation;
    _Bool _didShowControlsForArrival;
    id <SBUISystemApertureAutomaticallyInvalidatable> _alertingAssertion;
    NSLayoutConstraint *_widthConstraint;
    NSArray *_bannerConstraints;
    NSArray *_alternateBannerConstraints;
    double _cachedDisplayWidth;
    _Bool _waitingForDisplay;
    struct CGSize _deferredContentSize;
    NSString *_requestIdentifier;
    long long _activeLayoutMode;
    UIView<BannerView> *_bannerView;
    UIView<BannerView> *_alternateBannerView;
    BNBannerSource *_target;
    id <MapsBannerViewControllerDelegate> _delegate;
    GCDTimer *_timeoutTimer;
    GCDTimer *_apertureExpansionTimer;
    GCDTimer *_alternateBannerActiveTimer;
    UITapGestureRecognizer *_knobSelectRecognizer;
}

- (void).cxx_destruct;
@property(retain, nonatomic) UITapGestureRecognizer *knobSelectRecognizer; // @synthesize knobSelectRecognizer=_knobSelectRecognizer;
@property(retain, nonatomic) GCDTimer *alternateBannerActiveTimer; // @synthesize alternateBannerActiveTimer=_alternateBannerActiveTimer;
- (id);
@property(retain, nonatomic) GCDTimer *apertureExpansionTimer; // @synthesize apertureExpansionTimer=_apertureExpansionTimer;
@property(retain, nonatomic) GCDTimer *timeoutTimer; // @synthesize timeoutTimer=_timeoutTimer;
@property(readonly, nonatomic) __weak id <MapsBannerViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) __weak BNBannerSource *target; // @synthesize target=_target;
@property(readonly, nonatomic) UIView<BannerView> *alternateBannerView; // @synthesize alternateBannerView=_alternateBannerView;
@property(readonly, nonatomic) UIView<BannerView> *bannerView; // @synthesize bannerView=_bannerView;
@property(nonatomic) long long activeLayoutMode; // @synthesize activeLayoutMode=_activeLayoutMode;
- (void)_wheelChangedWithEvent:(id)arg1;
- (void)_handleSwipeGesture:(id)arg1;
- (void)_handleTapOnContent:(id)arg1;
- (void)_openMaps;
@property(readonly, copy, nonatomic) UIColor *keyColor;
@property(readonly, copy, nonatomic) NSString *elementIdentifier;
@property(readonly, nonatomic) unsigned long long statusBarStyleOverridesToSuppress;
@property(readonly, nonatomic) UIView<SBUISystemApertureAccessoryView> *detachedMinimalView;
@property(readonly, nonatomic) UIView<SBUISystemApertureAccessoryView> *minimalView;
@property(readonly, nonatomic) UIView<SBUISystemApertureAccessoryView> *trailingView;
@property(readonly, nonatomic) UIView<SBUISystemApertureAccessoryView> *leadingView;
@property(readonly, nonatomic) long long maximumLayoutMode;
@property(readonly, nonatomic) long long preferredLayoutMode;
@property(readonly, nonatomic) unsigned long long presentationBehaviors;
@property(readonly, nonatomic) _Bool preventsInteractiveDismissal;
@property(readonly, nonatomic) long long contentRole;
- (id)systemApertureElementViewController;
- (void)_updateShowsControls;
- (void)_requestAlertingAssertionIfNecessary;
- (void)presentableWillNotAppearAsBanner:(id)arg1 withReason:(id)arg2;
- (void)presentableDidDisappearAsBanner:(id)arg1 withReason:(id)arg2;
- (void)presentableWillDisappearAsBanner:(id)arg1 withReason:(id)arg2;
- (void)presentableDidAppearAsBanner:(id)arg1;
- (void)presentableWillAppearAsBanner:(id)arg1;
@property(readonly, nonatomic) UIViewController *viewController;
@property(readonly, copy, nonatomic) NSString *requestIdentifier; // @synthesize requestIdentifier=_requestIdentifier;
@property(readonly, copy, nonatomic) NSString *requesterIdentifier;
- (void)_dismissBannerWithReason:(id)arg1;
- (void)_revertToPrimaryBannerView;
- (void)_revertToPrimaryBannerViewAfterDelay;
- (_Bool)_useSignificantUpdateSPI;
- (void)_setApertureExpansionTimeout;
- (void)_setTimeout;
- (void)setPreferredContentSize:(struct CGSize)arg1;
- (void)postTemporaryAlternateBannerView:(id)arg1;
- (_Bool)_shouldExpandForGuidanceState:(id)arg1;
- (void)updateFromGuidanceState:(id)arg1;
- (double)approximateWidth;
- (double)displayWidth;
@property(readonly, copy) NSString *description;
- (id)accessibilityIdentifier;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillLayoutSubviewsWithTransitionCoordinator:(id)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (id)_contentView;
- (void)viewDidLoad;
- (void)loadView;
- (id)initWithRequestId:(id)arg1 target:(id)arg2 bannerView:(id)arg3 delegate:(id)arg4 aperturePresentation:(_Bool)arg5;
- (_Bool)_canShowWhileLocked;

// Remaining properties
@property(readonly, copy, nonatomic) NSString *associatedAppBundleIdentifier;
@property(readonly, copy, nonatomic) NSString *associatedScenePersistenceIdentifier;
@property(nonatomic) _Bool canRequestAlertingAssertion;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, nonatomic, getter=isDraggingDismissalEnabled) _Bool draggingDismissalEnabled;
@property(readonly, nonatomic, getter=isDraggingInteractionEnabled) _Bool draggingInteractionEnabled;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) BSAction *launchAction;
@property(readonly, copy, nonatomic) NSURL *launchURL;
@property(nonatomic) unsigned long long minimalViewLayoutAxis;
@property(readonly, nonatomic) long long minimumLayoutMode;
@property(readonly, nonatomic) struct CGSize preferredCustomAspectRatio;
@property(readonly, nonatomic) long long preferredCustomLayout;
@property(readonly, nonatomic) double preferredHeightForBottomSafeArea;
@property(readonly, nonatomic) long long presentableBehavior;
@property(nonatomic) __weak id <BNPresentableContext> presentableContext;
@property(readonly, nonatomic) long long presentableType;
@property(readonly, nonatomic) _Bool preventsAutomaticDismissal;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isTouchOutsideDismissalEnabled) _Bool touchOutsideDismissalEnabled;

@end

