//
//     Generated by class-dump 3.5 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//
//  Build 2022-10-30 xybp888 Dump.
//  

@class CuratedCollectionResolver, MKMapItemIdentifier, UIImage, _TtC8MapsSync31MapsSyncCachedCuratedCollection;
@protocol GEOCollectionPublisherAttribution;

@interface CuratedCollectionHandler
{
    id <GEOCollectionPublisherAttribution> _publisherAttribution;
    CuratedCollectionResolver *_resolver;
    _TtC8MapsSync31MapsSyncCachedCuratedCollection *_curatedCollection;
    UIImage *_publisherImage;
}

+ (id)_delimiterString;
- (void).cxx_destruct;
@property(retain, nonatomic) UIImage *publisherImage; // @synthesize publisherImage=_publisherImage;
@property(retain, nonatomic) _TtC8MapsSync31MapsSyncCachedCuratedCollection *curatedCollection; // @synthesize curatedCollection=_curatedCollection;
- (void)retrieveGeoCollectionWithRefinedItems:(CDUnknownBlockType)arg1;
- (_Bool)canDelete;
- (_Bool)canShare;
- (id)sharingURL;
- (void)deleteCollection:(CDUnknownBlockType)arg1;
- (id)publisherAttribution;
- (_Bool)containsItem:(id)arg1;
- (id)badgeImage;
- (id)subtitle;
- (id)title;
- (id)identifier;
@property(readonly, nonatomic) MKMapItemIdentifier *curatedCollectionIdentifier;
- (void)setCollection:(id)arg1;
- (long long)handlerType;
- (void)updateWithMapsSyncCachedCuratedCollection:(id)arg1;
- (id)initWithCollection:(id)arg1;

@end

