//
//     Generated by class-dump 3.5 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//
//  Build 2022-10-30 xybp888 Dump.
//  

#import <objc/NSObject.h>

@class NSString, SASRequestOptions, SRCompactAutoDismissController, SRCompactViewController, SiriDismissalOptions, SiriSharedUICompactViewModelController;
@protocol AFUIBugReportPresenting, SiriUIPresentationDataSource, SiriUIPresentationDelegate;

@interface SRCompactPresentation : NSObject
{
    SRCompactViewController *_compactViewController;
    id <AFUIBugReportPresenting> _bugReportingPresenter;
    SRCompactAutoDismissController *_autoDismissController;
    _Bool _hasPresentedContent;
    _Bool _userCancelledRequestViaOrbViewTap;
    _Bool _hasOmittedDialogFromPresenting;
    _Bool _isPresentingSystemUI;
    long long _initialRequestSource;
    unsigned long long _lastDismissalReason;
    SiriDismissalOptions *_lastDismissalOptions;
    id <SiriUIPresentationDataSource> _dataSource;
    id <SiriUIPresentationDelegate> _delegate;
    SiriSharedUICompactViewModelController *_activeViewModelController;
    long long _inputType;
}

- (void).cxx_destruct;
@property(nonatomic, getter=_inputType, setter=_setInputType:) long long inputType; // @synthesize inputType=_inputType;
@property(retain, nonatomic) SiriSharedUICompactViewModelController *activeViewModelController; // @synthesize activeViewModelController=_activeViewModelController;
@property(nonatomic) __weak id <SiriUIPresentationDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) __weak id <SiriUIPresentationDataSource> dataSource; // @synthesize dataSource=_dataSource;
- (_Bool)alwaysShowRecognizedSpeech;
- (long long)_viewModelInputTypeForRequestInputType:(long long)arg1;
- (void)_dismissVideoPlayerViewController;
- (void)playbackDidFailForVideoPlayerViewController:(id)arg1;
- (void)playbackDidFinishForVideoPlayerViewController:(id)arg1;
- (void)modalContainerViewControllerViewDidDisappear:(id)arg1;
- (void)modalContainerViewControllerViewWillDisappear:(id)arg1;
- (void)autoDismissControllerRequestsDismissal:(id)arg1;
- (void)_showFullScreenDimmingLayer;
- (id)dismissalUserInfo;
- (void)siriDidHidePasscodeUnlock;
- (void)siriWillShowPasscodeUnlockAndCancelRequest:(_Bool)arg1;
- (_Bool)shouldUseEventDrivenIdleAndQuietUpdates;
- (void)didReceiveOrbViewTapToCancelRequest;
- (void)siriIsIdleAndQuietStatusDidChange:(_Bool)arg1;
@property(readonly, copy, nonatomic, getter=_activeRequestOptions) SASRequestOptions *activeRequestOptions;
- (void)compactViewControllerCancelHIDEventDefferal:(id)arg1;
- (void)compactViewControllerRequestsHIDEventDefferal:(id)arg1;
- (void)viewController:(id)arg1 didFinishEditingUtteranceWithText:(id)arg2 originalUserUtterance:(id)arg3 selectionResults:(id)arg4;
- (void)viewController:(id)arg1 siriRequestEnteredWithText:(id)arg2;
- (void)compactViewControllerDidEndEditing:(id)arg1;
- (void)compactViewController:(id)arg1 willBeginEditingOfType:(long long)arg2;
- (void)compactViewController:(id)arg1 requestsKeyboardWithCompletion:(CDUnknownBlockType)arg2;
- (_Bool)bugReportPresenterShouldPromptUserForScreenshotPermission:(id)arg1;
- (void)bugReportPresenter:(id)arg1 setStatusViewHidden:(_Bool)arg2;
- (id)bugReportPresenterRequestsPresentingView:(id)arg1;
- (double)bugReportPresenterRequestsLastPresentationTime:(id)arg1;
- (id)bugReportPresenterRequestsBugReportPrefixForTitle:(id)arg1;
- (id)bugReportPresenterRequestsBugReportKeywordIdentifiers:(id)arg1;
- (id)bugReportPresenterRequestsActiveConversation:(id)arg1;
- (void)bugReportPresenter:(id)arg1 setBugReportingAvailable:(_Bool)arg2;
- (void)bugReportPresenter:(id)arg1 requestsToTakeScreenshotWithCompletion:(CDUnknownBlockType)arg2;
- (void)bugReportPresenter:(id)arg1 requestsToPresentViewController:(id)arg2;
- (void)bugReportPresenter:(id)arg1 requestsToPerformAceCommand:(id)arg2;
- (void)bugReportPresenter:(id)arg1 requestsToOpenURL:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;
- (void)bugReportPresenter:(id)arg1 requestsToHandlePasscodeUnlockWithCompletion:(CDUnknownBlockType)arg2;
- (void)_setupBugReportingPresenterIfNecessary;
- (void)didReceiveReportBugAction;
- (void);
- (id)_analytics;
- (void)userDrilledIntoSnippet;
- (void)compactViewController:(id)arg1 viewDidDisappearForAceObject:(id)arg2;
- (void)compactViewController:(id)arg1 viewDidAppearForAceObject:(id)arg2;
- (void)siriCompactViewController:(id)arg1 willDismissViewController:(id)arg2;
- (void)didBeginProcessingConversationItems;
- (void)siriCompactViewController:(id)arg1 willPresentViewController:(id)arg2;
- (id)effectiveCoreLocationBundleForCompactViewController:(id)arg1;
- (void)didPresentContentForCompactViewController:(id)arg1;
- (void)cancelRequestForViewController:(id)arg1;
- (void)stopRecordingForViewController:(id)arg1;
- (void)endSiriSessionForViewController:(id)arg1 withDismissalReason:(unsigned long long)arg2;
- (void)viewController:(id)arg1 requestsHostBackgroundBlurVisible:(_Bool)arg2 reason:(long long)arg3 fence:(id)arg4;
- (void)viewControllerViewWillDisappear:(id)arg1;
- (void)compactViewController:(id)arg1 setStatusViewHidden:(_Bool)arg2;
- (void)compactViewController:(id)arg1 handleStartLocalRequest:(id)arg2 turnIdentifier:(id)arg3;
- (void)userTouchedSnippet;
- (void)viewControllerDidPresentUserInterface:(id)arg1;
- (id)localeForCompactViewController:(id)arg1;
- (unsigned long long)lockStateForCompactViewController:(id)arg1;
- (void)stopSpeakingForCompactViewController:(id)arg1;
- (void)compactViewController:(id)arg1 speakText:(id)arg2 isPhonetic:(_Bool)arg3 completion:(CDUnknownBlockType)arg4;
- (void)viewController:(id)arg1 performAceCommands:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)viewController:(id)arg1 openURL:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (struct CGRect)effectiveContentFrame;
- (struct CGSize)maxSizeForSnippet;
- (void)collapseSystemAperture;
- (double)expectedContentWidth;
- (void)siriWillBeginTearDownForDismissalReason:(unsigned long long)arg1 withOriginalDismissalOptions:(id)arg2;
- (void)setTopContentInset:(double)arg1 animated:(_Bool)arg2;
- (void)setBottomContentInset:(double)arg1;
- (_Bool)hasContentAtPoint:(struct CGPoint)arg1;
- (void)immersiveExperienceRequestedForViewModelController:(id)arg1;
- (id)compactViewModelController:(id)arg1 requestsTranscriptItemForAceObject:(id)arg2;
- (_Bool)siriDeviceLockedForViewModelController:(id)arg1;
- (_Bool)compactViewModelControllerShouldAlwaysShowRecognizedSpeech:(id)arg1;
- (void)compactViewModelController:(id)arg1 didProcessConversationItemsWithIdentifiers:(id)arg2;
- (long long)inputTypeForCompactViewModelController:(id)arg1;
- (void)_activeConversationDidChange;
- (void)didReceiveUpdateVisualResponseCommand:(id)arg1;
- (void)didPresentSystemUI;
- (void)resetViews;
- (void)didOmitDialogFromPresenting;
- (void)showFullScreenEffect:(id)arg1;
- (void)siriDidTapOutsideContent;
- (void)siriDidUpdateASRWithRecognition:(id)arg1;
- (void)siriDidStopSpeakingWithIdentifier:(id)arg1 speechQueueIsEmpty:(_Bool)arg2;
- (void)siriDidStartSpeakingWithIdentifier:(id)arg1;
- (void)siriDidDeactivateWithCompletion:(CDUnknownBlockType)arg1;
- (int)viewRegionForPresentedAceObject:(id)arg1;
- (_Bool)supportsVisualPresentationForConversationItem:(id)arg1;
- (void)handlePlayContentCommand:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (_Bool)shouldResumeInterruptedAudioPlayback;
- (void)siriDidStartNewConversationWithIdentifier:(id)arg1;
- (void)siriDidActivateFromSource:(long long)arg1;
- (void)siriResponseModeDidChange:(unsigned long long)arg1;
- (void)siriRequestWillStartWithRequestOptions:(id)arg1;
- (void)activeRequestOptionsDidChange;
- (void)dealloc;
- (void)didReceiveRevealRecognizedSpeechCommand:(id)arg1;
- (void)conversation:(id)arg1 didChangeWithTransaction:(id)arg2;
- (id)viewController;
- (void)configureForRequestOptions:(id)arg1;
- (id)_activeConversation;
- (id)_identifierOfPreviousConversation;
- (id)_conversationIdentifiers;
- (id)initWithDelegate:(id)arg1 dataSource:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

